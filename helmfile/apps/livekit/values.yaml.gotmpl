global:
  ## Global Docker image parameters
  ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
  ## @param global.imageRegistry Global Docker Image registry
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  ##
  imageRegistry: {{(coalesce .Values.container.livekit_server.registry .Values.container.default.registry) | quote }}
  imagePullSecrets:
    - name: {{ (coalesce .Values.container.livekit_server.imagePullSecret .Values.container.default.imagePullSecret) | quote }}
  ## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)
  ##
  defaultStorageClass: {{ .Values.pvc.default.storageClass | quote }}

commonLabels:
  app.kubernetes.io/part-of: livekit


clusterDomain: {{ .Values.cluster.networking.domain | default "cluster.local" | quote }}

livekit:
  image:
    registry: {{(coalesce .Values.container.livekit_server.registry .Values.container.default.registry) | quote }}
    repository: {{ .Values.container.livekit_server.repository | quote }}
    tag: {{ .Values.container.livekit_server.tag | quote }}

  resourcesPreset: {{ .Values.global.resourcesPreset | quote }}
  resources: {{ .Values.resource.livekit.livekit | default dict | toYaml | nindent 4 }}
  podSecurityContext: {{ .Values.security.default.podSecurityContext | toYaml | nindent 4 }}
  containerSecurityContext:  {{ .Values.security.default.containerSecurityContext | toYaml | nindent 4 }}
  autoscaling:
    hpa: {{ .Values.autoscaling.horizontal.livekit | toYaml | nindent 6 }}

  config:
    rtc:
      port_range_start: {{ .Values.application.livekit.portRangeStart }}
      port_range_end:  {{ .Values.application.livekit.portRangeEnd }}
    turn:
      enabled: false
      domain: turn-{{ .Values.global.hostname.livekit }}.{{ .Values.global.domain }}
      {{- if .Values.application.livekit.turnTLSecretName }}
      client_cert_file: /etc/livekit_certs/tls.crt
      client_key_file: /etc/livekit_certs/tls.key
      {{- end}}
  {{- if .Values.cluster.runtimeClassName }}
  runtimeClassName: {{ .Values.cluster.runtimeClassName | quote }}
  {{- end }}
  turnTLSecretName: {{ .Values.application.livekit.turnTLSecretName | default "" | quote }}

  redis:
    # enabled: {{ not (empty .Values.cache.livekit) }}
    enabled: true
    host: {{ .Values.cache.livekit.host | quote }}
    port: {{ .Values.cache.livekit.port }}
    password: {{ .Values.cache.livekit.password | quote }}

  keys: {{ .Values.application.livekit.keys | toYaml | nindent 4 }}

  loadBalancerIP: {{ .Values.application.livekit.loadBalancerIP | default "1.3.5.7" | quote }}

cronjob:
  image:
    registry: {{(coalesce .Values.container.kubectl.registry .Values.container.default.registry) | quote }}
    repository: {{ .Values.container.kubectl.repository | quote }}
    tag: {{ .Values.container.kubectl.tag | quote }}


ingress:
  ## @param ingress.enabled Enable ingress record generation for livekit_server
  ##
  enabled: true
  hostname: {{ .Values.global.hostname.livekit }}.{{ .Values.global.domain }}
  extraTls: {{ .Values.tls.livekit | toYaml | nindent 4 }}
  ingressClassName: {{ .Values.cluster.ingress.className | quote }}
  annotations:
    {{- if .Values.cluster.ingress.annotations }}
    {{ .Values.cluster.ingress.annotations | toYaml | nindent 4 }}
    {{- end }}
    {{- if eq .Values.cluster.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    {{- end }}
    {{- if eq .Values.cluster.ingress.type "haproxy-openshift" }}
    haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload
    {{- end }}


networkPolicy:
  enabled: true
  extraEgress:
    # Redis connectivity
    - ports:
        - port: 6379
          protocol: TCP
