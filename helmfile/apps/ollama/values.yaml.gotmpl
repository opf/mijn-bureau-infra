{{- if .Values.application.ollama.enabled }}
image:
  repository: {{ printf "%s/%s" (coalesce .Values.container.ollama.registry .Values.container.default.registry) (.Values.container.ollama.repository) | quote }}
  tag: {{ .Values.container.ollama.tag | quote }}
  pullPolicy: "Always"

imagePullSecrets:
  - name: {{ .Values.container.default.imagePullSecret | quote }}

# We need to specify the mountPath to point
# to a directory we have access to as non-root user.
ollama:
  models:
    pull:
      {{- if .Values.application.ollama.model }}
      - {{ .Values.application.ollama.model | quote }}
      {{- else }}
      []
      {{- end }}
    run:
      {{- if .Values.application.ollama.model }}
      - {{ .Values.application.ollama.model | quote }}
      {{- else }}
      []
      {{- end }}
  mountPath: "/home/ollama/.ollama"
  gpu:
    enabled: {{ .Values.application.ollama.gpu.enabled | default false }}
    {{- if .Values.application.ollama.gpu.enabled }}
    type: {{ .Values.application.ollama.gpu.type | default "nvidia" | quote }}
    number: {{ .Values.application.ollama.gpu.number | default 1 }}
    {{- if .Values.application.ollama.gpu.mig }}
    mig:
      enabled: {{ .Values.application.ollama.gpu.mig.enabled | default false }}
      {{- if .Values.application.ollama.gpu.mig.devices }}
      devices:
        {{- toYaml .Values.application.ollama.gpu.mig.devices | nindent 8 }}
      {{- end }}
    {{- end }}
    {{- end }}


# We need to specify the environment variable HOME used by Ollama to point
# to a directory we have access to as non-root user. This needs to be the
# directory the .ollama file above is mounted in.
extraEnv:
  - name: HOME
    value: "/home/ollama"

autoscaling:
  enabled: {{ .Values.autoscaling.horizontal.ollama.enabled }}
  minReplicas: {{ .Values.autoscaling.horizontal.ollama.minReplicas| quote }}
  maxReplicas: {{ .Values.autoscaling.horizontal.ollama.maxReplicas  | quote }}
  targetCPUUtilizationPercentage: {{ .Values.autoscaling.horizontal.ollama.targetCPU | quote }}
  targetMemoryUtilizationPercentage: {{ .Values.autoscaling.horizontal.ollama.targetMemory | quote }}

resources:
  {{- if .Values.resource.ollama }}
  {{- toYaml .Values.resource.ollama | nindent 2 }}
  {{- else }}
  limits:
    memory: "4Gi"
    cpu:  "750m"
  requests:
    memory: "2Gi"
    cpu: "400m"
  {{- end }}

persistentVolume:
  enabled: true
  size: {{ coalesce .Values.pvc.ollama.size .Values.pvc.default.size | quote }}
  accessModes: {{ coalesce .Values.pvc.ollama.accessModes .Values.pvc.default.accessModes | toYaml | nindent 4 }}
  storageClass: {{ coalesce .Values.pvc.ollama.storageClass .Values.pvc.default.storageClass | quote }}



podSecurityContext: {{.Values.security.default.podSecurityContext | toYaml | nindent 2  }}
securityContext: {{.Values.security.default.containerSecurityContext | toYaml | nindent 2  }}

networkPolicy:
  enabled: true
  allowExternal: false
  allowExternalEgress: false

  extraIngress:
    # Allow traffic from ingress controller and other apps
    - ports:
        - port: 11434
          protocol: TCP

  # Specific egress rules for required services only
  extraEgress:
    # Allow HTTPS access for model downloads from external registries
    - ports:
        - port: 443
          protocol: TCP
    # Allow HTTP access for model downloads
    - ports:
        - port: 80
          protocol: TCP

{{- end }}
