#
# SPDX-License-Identifier: APACHE-2.0

## @param architecture Architecture to apply to Synapse. Can either be "monolith" or "replication".
architecture: "monolith"

## @section Global parameters

global:
  ## Global Docker image parameters
  ## Please, note that this will override the image parameters, including dependencies, configured to use the global value
  ## @param global.imageRegistry Global Docker Image registry
  ## @param global.imagePullSecrets Global Docker registry secret names as an array
  ##
  imageRegistry: ""
  imagePullSecrets: []
  ## @param global.defaultStorageClass Global default StorageClass for Persistent Volume(s)
  ##
  defaultStorageClass: ""
  ## Security parameters
  ## @param global.security.allowInsecureImages Allows skipping image verification
  ##
  security:
    allowInsecureImages: false
  ## Compatibility adaptations for Kubernetes platforms
  ##
  compatibility:
    ## Compatibility adaptations for Openshift
    ## @param global.compatibility.openshift.adaptSecurityContext Adapt the securityContext sections of the deployment to make them compatible with Openshift restricted-v2 SCC: remove runAsUser, runAsGroup and fsGroup and let the platform use their allowed default IDs. Possible values: auto (apply if the detected running cluster is Openshift), force (perform the adaptation always), disabled (do not perform adaptation)
    ##
    openshift:
      adaptSecurityContext: auto
    ## @param global.compatibility.omitEmptySeLinuxOptions If set to true, removes the seLinuxOptions from the securityContexts when it is set to an empty object
    ##
    omitEmptySeLinuxOptions: false

## @section Common parameters

## @param kubeVersion Override Kubernetes version reported by .Capabilities
##
kubeVersion: ""
## @param apiVersions Override Kubernetes API versions reported by .Capabilities
##
apiVersions: []
## @param nameOverride String to partially override common.names.name
##
nameOverride: ""
## @param fullnameOverride String to fully override common.names.fullname
##
fullnameOverride: ""
## @param namespaceOverride String to fully override common.names.namespace
##
namespaceOverride: ""
## @param commonLabels Labels to add to all deployed objects
##
commonLabels: {}
## @param commonAnnotations Annotations to add to all deployed objects
##
commonAnnotations: {}
## @param extraDeploy Array of extra objects to deploy with the release
##
extraDeploy: []
## Diagnostic mode
## @param diagnosticMode.enabled Enable diagnostic mode (all probes will be disabled and the command will be overridden)
## @param diagnosticMode.command Command to override all containers in the chart release
## @param diagnosticMode.args Args to override all containers in the chart release
##
diagnosticMode:
  enabled: false
  command:
    - sleep
  args:
    - infinity

## @section Synapse image parameters
##
## ref: https://hub.docker.com/r/matrixdotorg/synapse/
## @param image.registry Synapse master image registry
## @param image.repository Synapse master image repository
## @param image.tag Synapse master image tag (immutable tags are recommended)
## @param image.digest Synapse master image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag image tag (immutable tags are recommended)
## @param image.pullPolicy Synapse master image pull policy
## @param image.pullSecrets Synapse master image pull secrets
## @param image.debug Enable Synapse master image debug mode
##
image:
  registry: docker.io
  repository: matrixdotorg/synapse
  tag: "v1.133.0"
  digest: ""
  ## Specify a imagePullPolicy
  ## ref: https://kubernetes.io/docs/concepts/containers/images/#pre-pulled-images
  ##
  pullPolicy: IfNotPresent
  ## Optionally specify an array of imagePullSecrets (secrets must be manually created in the namespace)
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ## e.g:
  ## pullSecrets:
  ##   - myRegistryKeySecretName
  ##
  pullSecrets: []
  debug: false

## @section Synapse persistence parameters
##
persistence:
  ## @param persistence.enabled Enable persistence using Persistent Volume Claims
  ##
  enabled: true
  ## @param persistence.mountPath Path to mount the volume at.
  ##
  mountPath: /synapse/data
  ## @param persistence.subPath The subdirectory of the volume to mount to, useful in dev environments and one PV for multiple services
  ##
  subPath: ""
  ## @param persistence.subPathExpr Used to construct the subPath subdirectory of the volume to mount on Synapse master containers
  ##
  subPathExpr: ""
  ## @param persistence.storageClass Storage class of backing PVC
  ## If defined, storageClassName: <storageClass>
  ## If set to "-", storageClassName: "", which disables dynamic provisioning
  ## If undefined (the default) or set to null, no storageClassName spec is
  ##   set, choosing the default provisioner.  (gp2 on AWS, standard on
  ##   GKE, AWS & OpenStack)
  ##
  storageClass: ""
  ## @param persistence.annotations Persistent Volume Claim annotations
  ##
  annotations: {}
  ## @param persistence.labels Persistent Volume Claim labels
  ##
  labels: {}
  ## @param persistence.accessModes Persistent Volume Access Modes
  ##
  accessModes:
    - ReadWriteOnce
  ## @param persistence.size Size of data volume
  ##
  size: 8Gi
  ## @param persistence.dataSource Custom PVC data source
  ##
  dataSource: {}
  ## @param persistence.existingClaim The name of an existing PVC to use for persistence
  ##
  existingClaim: ""
  ## @param persistence.selector Selector to match an existing Persistent Volume for WordPress data PVC
  ## If set, the PVC can't have a PV dynamically provisioned for it
  ## E.g.
  ## selector:
  ##   matchLabels:
  ##     app: my-app
  ##
  selector: {}

## @section Synapse master parameters
##
master:
  ## @param master.name Synapse master name, used as postfix for kubernetes naming
  name: "master"
  ## @param master.containerPorts.http Synapse master synapse container port
  ## @param master.containerPorts.replication Synapse master replication container port
  ## @param master.containerPorts.metrics Synapse master metrics container port
  ##
  containerPorts:
    http: 8448
    replication: 9093
    metrics: 9090
  ## @param master.extraContainerPorts Optionally specify extra list of additional ports for Synapse master containers
  ## e.g:
  ## extraContainerPorts:
  ##   - name: myservice
  ##     containerPort: 9090
  ##
  extraContainerPorts: []
  ## Configure extra options for Synapse master containers' liveness and readiness probes
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
  ## @param master.livenessProbe.enabled Enable livenessProbe on Synapse master containers
  ## @param master.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
  ## @param master.livenessProbe.periodSeconds Period seconds for livenessProbe
  ## @param master.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
  ## @param master.livenessProbe.failureThreshold Failure threshold for livenessProbe
  ## @param master.livenessProbe.successThreshold Success threshold for livenessProbe
  ##
  livenessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1
  ## @param master.readinessProbe.enabled Enable readinessProbe on Synapse master containers
  ## @param master.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
  ## @param master.readinessProbe.periodSeconds Period seconds for readinessProbe
  ## @param master.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
  ## @param master.readinessProbe.failureThreshold Failure threshold for readinessProbe
  ## @param master.readinessProbe.successThreshold Success threshold for readinessProbe
  ##
  readinessProbe:
    enabled: true
    initialDelaySeconds: 10
    periodSeconds: 10
    timeoutSeconds: 2
    failureThreshold: 3
    successThreshold: 1
  ## @param master.startupProbe.enabled Enable startupProbe on Synapse master containers
  ## @param master.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
  ## @param master.startupProbe.periodSeconds Period seconds for startupProbe
  ## @param master.startupProbe.timeoutSeconds Timeout seconds for startupProbe
  ## @param master.startupProbe.failureThreshold Failure threshold for startupProbe
  ## @param master.startupProbe.successThreshold Success threshold for startupProbe
  ##
  startupProbe:
    enabled: false
    initialDelaySeconds: 10
    periodSeconds: 5
    timeoutSeconds: 2
    failureThreshold: 5
    successThreshold: 1
  ## @param master.customLivenessProbe Custom livenessProbe that overrides the default one
  ##
  customLivenessProbe: {}
  ## @param master.customReadinessProbe Custom readinessProbe that overrides the default one
  ##
  customReadinessProbe: {}
  ## @param master.customStartupProbe Custom startupProbe that overrides the default one
  ##
  customStartupProbe: {}
  ## Synapse master resource requests and limits
  ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
  ## @param master.resourcesPreset Set Synapse master container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if synapse.resources is set (synapse.resources is recommended for production).
  ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
  ##
  resourcesPreset: "nano"
  ## @param master.resources Set Synapse master container requests and limits for different resources like CPU or memory (essential for production workloads)
  ## Example:
  ## resources:
  ##   requests:
  ##     cpu: 2
  ##     memory: 512Mi
  ##   limits:
  ##     cpu: 3
  ##     memory: 1024Mi
  ##
  resources: {}
  ## Configure Pods Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
  ## @param master.podSecurityContext.enabled Enable Synapse master pods' Security Context
  ## @param master.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for Synapse master pods
  ## @param master.podSecurityContext.sysctls Set kernel settings using the sysctl interface for Synapse master pods
  ## @param master.podSecurityContext.supplementalGroups Set filesystem extra groups for Synapse master pods
  ## @param master.podSecurityContext.fsGroup Set fsGroup in Synapse master pods' Security Context
  ##
  podSecurityContext:
    enabled: true
    fsGroupChangePolicy: Always
    sysctls: []
    supplementalGroups: []
    fsGroup: 1001
  ## Configure Container Security Context
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
  ## @param master.containerSecurityContext.enabled Enabled Synapse master container' Security Context
  ## @param master.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Synapse master container
  ## @param master.containerSecurityContext.runAsUser Set runAsUser in Synapse master container' Security Context
  ## @param master.containerSecurityContext.runAsGroup Set runAsGroup in Synapse master container' Security Context
  ## @param master.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Synapse master container' Security Context
  ## @param master.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Synapse master container' Security Context
  ## @param master.containerSecurityContext.privileged Set privileged in Synapse master container' Security Context
  ## @param master.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Synapse master container' Security Context
  ## @param master.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Synapse master container
  ## @param master.containerSecurityContext.seccompProfile.type Set seccomp profile in Synapse master container
  ##
  containerSecurityContext:
    enabled: true
    seLinuxOptions: {}
    runAsUser: 1001
    runAsGroup: 1001
    runAsNonRoot: true
    readOnlyRootFilesystem: true
    privileged: false
    allowPrivilegeEscalation: false
    capabilities:
      drop: ["ALL"]
    seccompProfile:
      type: "RuntimeDefault"
  ## @param master.existingConfigmap The name of an existing ConfigMap with your custom configuration for Synapse master
  ##
  existingConfigmap:
  ## @param master.command Override default Synapse master container command (useful when using custom images)
  ##
  command: []
  ## @param master.args Override default Synapse master container args (useful when using custom images)
  ##
  args: []
  ## @param master.automountServiceAccountToken Mount Service Account token in Synapse master pods
  ##
  automountServiceAccountToken: false
  ## @param master.hostAliases Synapse master pods host aliases
  ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
  ##
  hostAliases: []
  ## @param master.daemonsetAnnotations Annotations for Synapse master daemonset
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  daemonsetAnnotations: {}
  ## @param master.deploymentAnnotations Annotations for Synapse master deployment
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  deploymentAnnotations: {}
  ## @param master.statefulsetAnnotations Annotations for Synapse master statefulset
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  statefulsetAnnotations: {}
  ## @param master.podLabels Extra labels for Synapse master pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
  ##
  podLabels: {}
  ## @param master.podAnnotations Annotations for Synapse master pods
  ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
  ##
  podAnnotations: {}
  ## @param master.podAffinityPreset Pod affinity preset. Ignored if `synapse.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAffinityPreset: ""
  ## @param master.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `synapse.affinity` is set. Allowed values: `soft` or `hard`
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
  ##
  podAntiAffinityPreset: soft
  ## Node synapse.affinity preset
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
  ##
  nodeAffinityPreset:
    ## @param master.nodeAffinityPreset.type Node affinity preset type. Ignored if `synapse.affinity` is set. Allowed values: `soft` or `hard`
    ##
    type: ""
    ## @param master.nodeAffinityPreset.key Node label key to match. Ignored if `synapse.affinity` is set
    ##
    key: ""
    ## @param master.nodeAffinityPreset.values Node label values to match. Ignored if `synapse.affinity` is set
    ## E.g.
    ## values:
    ##   - e2e-az1
    ##   - e2e-az2
    ##
    values: []
  ## @param master.affinity Affinity for Synapse master pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
  ## NOTE: `synapse.podAffinityPreset`, `synapse.podAntiAffinityPreset`, and `synapse.nodeAffinityPreset` will be ignored when it's set
  ##
  affinity: {}
  ## @param master.nodeSelector Node labels for Synapse master pods assignment
  ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
  ##
  nodeSelector: {}
  ## @param master.tolerations Tolerations for Synapse master pods assignment
  ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
  ##
  tolerations: []
  ## ONLY FOR DEPLOYMENTS:
  ## @param master.updateStrategy.type Synapse master deployment strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
  ## ONLY FOR STATEFULSETS:
  ## @param master.updateStrategy.type Synapse master statefulset strategy type
  ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
  ##
  updateStrategy:
    ## ONLY FOR DEPLOYMENTS:
    ## Can be set to RollingUpdate or Recreate
    ## ONLY FOR STATEFULSETS:
    ## Can be set to RollingUpdate or OnDelete
    ##
    type: Recreate
  ## ONLY FOR STATEFULSETS:
  ## @param master.podManagementPolicy Pod management policy for Synapse master statefulset
  ## Ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
  ##
  podManagementPolicy: OrderedReady
  ## @param master.priorityClassName Synapse master pods' priorityClassName
  ##
  priorityClassName: ""
  ## @param master.topologySpreadConstraints Topology Spread Constraints for Synapse master pod assignment spread across your cluster among failure-domains
  ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
  ##
  topologySpreadConstraints: []
  ## @param master.schedulerName Name of the k8s scheduler (other than default) for Synapse master pods
  ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
  ##
  schedulerName: ""
  ## @param runtimeClassName Name of the runtime class name for Synapse master pods
  ## ref: https://kubernetes.io/docs/concepts/containers/runtime-class/#usage
  ##
  runtimeClassName: ""
  ## @param master.terminationGracePeriodSeconds Seconds Synapse master pods need to terminate gracefully
  ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
  ##
  terminationGracePeriodSeconds: ""
  ## @param master.lifecycleHooks for Synapse master containers to automate configuration before or after startup
  ##
  lifecycleHooks: {}
  ## @param master.extraEnvVars Array with extra environment variables to add to Synapse master containers
  ## e.g:
  ## extraEnvVars:
  ##   - name: FOO
  ##     value: "bar"
  ##
  extraEnvVars: []
  ## @param master.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Synapse master containers
  ##
  extraEnvVarsCM: ""
  ## @param master.extraEnvVarsSecret Name of existing Secret containing extra env vars for Synapse master containers
  ##
  extraEnvVarsSecret: ""
  ## @param master.extraVolumes Optionally specify extra list of additional volumes for the Synapse master pods
  ##
  extraVolumes: []
  ## @param master.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Synapse master containers
  ##
  extraVolumeMounts: []
  ## @param master.sidecars Add additional sidecar containers to the Synapse master pods
  ## e.g:
  ## sidecars:
  ##   - name: your-image-name
  ##     image: your-image
  ##     imagePullPolicy: Always
  ##     ports:
  ##       - name: portname
  ##         containerPort: 1234
  ##
  sidecars: []
  ## Pod Disruption Budget configuration
  ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
  ## @param master.pdb.create Enable/disable a Pod Disruption Budget creation
  ## @param master.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
  ## @param master.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `synapse.pdb.minAvailable` and `synapse.pdb.maxUnavailable` are empty.
  ##
  pdb:
    create: false
    minAvailable: ""
    maxUnavailable: ""
  ## Autoscaling configuration
  ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
  ##
  autoscaling:
    ## @param master.autoscaling.vpa.enabled Enable VPA for Synapse master pods
    ## @param master.autoscaling.vpa.annotations Annotations for VPA resource
    ## @param master.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
    ## @param master.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
    ## @param master.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
    ##
    vpa:
      enabled: false
      annotations: {}
      controlledResources: []
      maxAllowed: {}
      minAllowed: {}
      ## @param master.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
      ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
      ## Possible values are "Off", "Initial", "Recreate", and "Auto".
      ##
      updatePolicy:
        updateMode: Auto
  ## Synapse master service parameters
  ##
  service:
    ## @param master.service.type Synapse master service type
    ##
    type: ClusterIP
    ## @param master.service.ports.http Synapse master service HTTP port
    ## @param master.service.ports.replication Synapse master service replication port
    ## @param master.service.ports.metrics Synapse master metrics replication port
    ##
    ports:
      http: 8448
      replication: 9093
      metrics: 9090
    ## Node ports to expose
    ## @param master.service.nodePorts.http Node port for synapse
    ## @param master.service.nodePorts.replication Node port for replication
    ## @param master.service.nodePorts.metrics Node port for metrics
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      http: ""
      replication: ""
      metrics: ""
    ## @param master.service.clusterIP Synapse master service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param master.service.loadBalancerIP Synapse master service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param master.service.loadBalancerSourceRanges Synapse master service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param master.service.externalTrafficPolicy Synapse master service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param master.service.annotations Additional custom annotations for Synapse master service
    ##
    annotations: {}
    ## @param master.service.extraPorts Extra ports to expose in Synapse master service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param master.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param master.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}
  ## Network Policies
  ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
  ##
  networkPolicy:
    ## @param master.networkPolicy.enabled Specifies whether a NetworkPolicy should be created
    ##
    enabled: true
    ## @param master.networkPolicy.allowExternal Don't require server label for connections
    ## The Policy model to apply. When set to false, only pods with the correct
    ## server label will have network access to the ports server is listening
    ## on. When true, server will accept connections from any source
    ## (with the correct destination port).
    ##
    allowExternal: false
    ## @param master.networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
    ##
    allowExternalEgress: false
    ## @param master.networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `networkPolicy.allowExternal` is true.
    ##
    addExternalClientAccess: true
    ## @param master.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
    ## e.g:
    ## extraIngress:
    ##   - ports:
    ##       - port: 1234
    ##     from:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    extraIngress: []
    ## @param master.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
    ## e.g:
    ## extraEgress:
    ##   - ports:
    ##       - port: 1234
    ##     to:
    ##       - podSelector:
    ##           - matchLabels:
    ##               - role: frontend
    ##       - podSelector:
    ##           - matchExpressions:
    ##               - key: role
    ##                 operator: In
    ##                 values:
    ##                   - frontend
    ##
    extraEgress: []
    ## @param master.networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `networkPolicy.allowExternal` is true.
    ## e.g:
    ## ingressPodMatchLabels:
    ##   my-client: "true"
    #
    ingressPodMatchLabels: {}
    ## @param master.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
    ## @param master.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
    ##
    ingressNSMatchLabels: {}
    ingressNSPodMatchLabels: {}
  ## Enable persistence using Persistent Volume Claims
  ## ref: https://kubernetes.io/docs/concepts/storage/persistent-volumes/
  ##
  ## Prometheus metrics
  ##
  metrics:
    ## @param master.metrics.enabled Enable the export of Prometheus metrics
    ##
    enabled: false
    ## Prometheus Operator ServiceMonitor configuration
    ##
    serviceMonitor:
      ## @param master.metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
      ##
      enabled: false
      ## @param master.metrics.serviceMonitor.namespace Namespace in which Prometheus is running
      ##
      namespace: ""
      ## @param master.metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
      ##
      annotations: {}
      ## @param master.metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
      ##
      labels: {}
      ## @param master.metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
      ##
      jobLabel: ""
      ## @param master.metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
      ##
      honorLabels: false
      ## @param master.metrics.serviceMonitor.tlsConfig [object] TLS configuration used for scrape endpoints used by Prometheus
      ##
      tlsConfig: {}
      ## @param master.metrics.serviceMonitor.interval Interval at which metrics should be scraped.
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## interval: 10s
      ##
      interval: ""
      ## @param master.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
      ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
      ## e.g:
      ## scrapeTimeout: 10s
      ##
      scrapeTimeout: ""
      ## @param master.metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
      ##
      metricRelabelings: []
      ## @param master.metrics.serviceMonitor.relabelings Specify general relabeling
      ##
      relabelings: []
      ## @param master.metrics.serviceMonitor.selector Prometheus instance selector labels
      ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
      ## selector:
      ##   prometheus: my-prometheus
      ##
      selector: {}
  ## @param master.annotations Additional custom annotations for Synapse master resource
  ##
  annotations: {}

## @section Synapse replication parameters
##
replication:
  ## Synapse replication service parameters
  ##
  service:
    ## @param replication.service.type Synapse replication service type
    ##
    type: ClusterIP
    ## @param replication.service.ports.replication Synapse replication service replication port
    ##
    ports:
      replication: 9093
    ## Node ports to expose
    ## @param replication.service.nodePorts.replication Node port for replication
    ## NOTE: choose port between <30000-32767>
    ##
    nodePorts:
      replication: ""
    ## @param replication.service.clusterIP Synapse replication service Cluster IP
    ## e.g.:
    ## clusterIP: None
    ##
    clusterIP: ""
    ## @param replication.service.loadBalancerIP Synapse replication service Load Balancer IP
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
    ##
    loadBalancerIP: ""
    ## @param replication.service.loadBalancerSourceRanges Synapse replication service Load Balancer sources
    ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
    ## e.g:
    ## loadBalancerSourceRanges:
    ##   - 10.10.10.0/24
    ##
    loadBalancerSourceRanges: []
    ## @param replication.service.externalTrafficPolicy Synapse replication service external traffic policy
    ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
    ##
    externalTrafficPolicy: Cluster
    ## @param replication.service.annotations Additional custom annotations for Synapse replication service
    ##
    annotations: {}
    ## @param replication.service.extraPorts Extra ports to expose in Synapse replication service (normally used with the `sidecars` value)
    ##
    extraPorts: []
    ## @param replication.service.sessionAffinity Control where client requests go, to the same pod or round-robin
    ## Values: ClientIP or None
    ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
    ##
    sessionAffinity: None
    ## @param replication.service.sessionAffinityConfig Additional settings for the sessionAffinity
    ## sessionAffinityConfig:
    ##   clientIP:
    ##     timeoutSeconds: 300
    ##
    sessionAffinityConfig: {}


## @section Synapse worker parameters
## ref: https://github.com/matrix-org/synapse/blob/master/docs/workers.md
##
worker:
  ## Default configuration, this is inherited into all workers, and can also be
  ## overriden on each worker type.
  ##
  default:
    ## @param worker.default.replicaCount The number of worker replicas, note that some workers require special
    ## handling. Refer to the information URL above.
    ##
    replicaCount: 1
    ## @param worker.default.containerPorts.listener Synapse worker listener container port
    ## @param worker.default.containerPorts.replication Synapse worker replication container port
    ## @param worker.default.containerPorts.metrics Synapse worker metrics container port
    ##
    containerPorts:
      listener: 8083
      replication: 9093
      metrics: 9090
    ## @param worker.default.extraContainerPorts Optionally specify extra list of additional ports for Synapse worker containers
    ## e.g:
    ## extraContainerPorts:
    ##   - name: myservice
    ##     containerPort: 9090
    ##
    extraContainerPorts: []
    ## Configure extra options for Synapse worker containers' liveness and readiness probes
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/#configure-probes
    ## @param worker.default.livenessProbe.enabled Enable livenessProbe on Synapse worker containers
    ## @param worker.default.livenessProbe.initialDelaySeconds Initial delay seconds for livenessProbe
    ## @param worker.default.livenessProbe.periodSeconds Period seconds for livenessProbe
    ## @param worker.default.livenessProbe.timeoutSeconds Timeout seconds for livenessProbe
    ## @param worker.default.livenessProbe.failureThreshold Failure threshold for livenessProbe
    ## @param worker.default.livenessProbe.successThreshold Success threshold for livenessProbe
    ##
    livenessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 2
      failureThreshold: 3
      successThreshold: 1
    ## @param worker.default.readinessProbe.enabled Enable readinessProbe on Synapse worker containers
    ## @param worker.default.readinessProbe.initialDelaySeconds Initial delay seconds for readinessProbe
    ## @param worker.default.readinessProbe.periodSeconds Period seconds for readinessProbe
    ## @param worker.default.readinessProbe.timeoutSeconds Timeout seconds for readinessProbe
    ## @param worker.default.readinessProbe.failureThreshold Failure threshold for readinessProbe
    ## @param worker.default.readinessProbe.successThreshold Success threshold for readinessProbe
    ##
    readinessProbe:
      enabled: true
      initialDelaySeconds: 10
      periodSeconds: 10
      timeoutSeconds: 2
      failureThreshold: 3
      successThreshold: 1
    ## @param worker.default.startupProbe.enabled Enable startupProbe on Synapse worker containers
    ## @param worker.default.startupProbe.initialDelaySeconds Initial delay seconds for startupProbe
    ## @param worker.default.startupProbe.periodSeconds Period seconds for startupProbe
    ## @param worker.default.startupProbe.timeoutSeconds Timeout seconds for startupProbe
    ## @param worker.default.startupProbe.failureThreshold Failure threshold for startupProbe
    ## @param worker.default.startupProbe.successThreshold Success threshold for startupProbe
    ##
    startupProbe:
      enabled: false
      initialDelaySeconds: 10
      periodSeconds: 5
      timeoutSeconds: 2
      failureThreshold: 5
      successThreshold: 1
    ## @param worker.default.customLivenessProbe Custom livenessProbe that overrides the default one
    ##
    customLivenessProbe: {}
    ## @param worker.default.customReadinessProbe Custom readinessProbe that overrides the default one
    ##
    customReadinessProbe: {}
    ## @param worker.default.customStartupProbe Custom startupProbe that overrides the default one
    ##
    customStartupProbe: {}
    ## Synapse worker resource requests and limits
    ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    ## @param worker.default.resourcesPreset Set Synapse worker container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if synapse.resources is set (synapse.resources is recommended for production).
    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    ##
    resourcesPreset: "nano"
    ## @param worker.default.resources Set Synapse worker container requests and limits for different resources like CPU or memory (essential for production workloads)
    ## Example:
    ## resources:
    ##   requests:
    ##     cpu: 2
    ##     memory: 512Mi
    ##   limits:
    ##     cpu: 3
    ##     memory: 1024Mi
    ##
    resources: {}
    ## Configure Pods Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-pod
    ## @param worker.default.podSecurityContext.enabled Enable Synapse worker pods' Security Context
    ## @param worker.default.podSecurityContext.fsGroupChangePolicy Set filesystem group change policy for Synapse worker pods
    ## @param worker.default.podSecurityContext.sysctls Set kernel settings using the sysctl interface for Synapse worker pods
    ## @param worker.default.podSecurityContext.supplementalGroups Set filesystem extra groups for Synapse worker pods
    ## @param worker.default.podSecurityContext.fsGroup Set fsGroup in Synapse worker pods' Security Context
    ##
    podSecurityContext:
      enabled: true
      fsGroupChangePolicy: Always
      sysctls: []
      supplementalGroups: []
      fsGroup: 1001
    ## Configure Container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param worker.default.containerSecurityContext.enabled Enabled Synapse worker.default container' Security Context
    ## @param worker.default.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in Synapse worker.default container
    ## @param worker.default.containerSecurityContext.runAsUser Set runAsUser in Synapse worker.default container' Security Context
    ## @param worker.default.containerSecurityContext.runAsGroup Set runAsGroup in Synapse worker.default container' Security Context
    ## @param worker.default.containerSecurityContext.runAsNonRoot Set runAsNonRoot in Synapse worker.default container' Security Context
    ## @param worker.default.containerSecurityContext.readOnlyRootFilesystem Set readOnlyRootFilesystem in Synapse worker.default container' Security Context
    ## @param worker.default.containerSecurityContext.privileged Set privileged in Synapse worker.default container' Security Context
    ## @param worker.default.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in Synapse worker.default container' Security Context
    ## @param worker.default.containerSecurityContext.capabilities.drop List of capabilities to be dropped in Synapse worker.default container
    ## @param worker.default.containerSecurityContext.seccompProfile.type Set seccomp profile in Synapse worker.default container
    ##
    containerSecurityContext:
      enabled: true
      seLinuxOptions: {}
      runAsUser: 1001
      runAsGroup: 1001
      runAsNonRoot: true
      readOnlyRootFilesystem: true
      privileged: false
      allowPrivilegeEscalation: false
      capabilities:
        drop: ["ALL"]
      seccompProfile:
        type: "RuntimeDefault"
    ## @param worker.default.existingConfigmap The name of an existing ConfigMap with your custom configuration for Synapse worker
    ##
    existingConfigmap:
    ## @param worker.default.command Override default Synapse worker container command (useful when using custom images)
    ##
    command: []
    ## @param worker.default.args Override default Synapse worker container args (useful when using custom images)
    ##
    args: []
    ## @param worker.default.automountServiceAccountToken Mount Service Account token in Synapse worker pods
    ##
    automountServiceAccountToken: false
    ## @param worker.default.hostAliases Synapse worker pods host aliases
    ## https://kubernetes.io/docs/concepts/services-networking/add-entries-to-pod-etc-hosts-with-host-aliases/
    ##
    hostAliases: []
    ## @param worker.default.daemonsetAnnotations Annotations for Synapse worker daemonset
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    daemonsetAnnotations: {}
    ## @param worker.default.deploymentAnnotations Annotations for Synapse worker deployment
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    deploymentAnnotations: {}
    ## @param worker.default.statefulsetAnnotations Annotations for Synapse worker statefulset
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    statefulsetAnnotations: {}
    ## @param worker.default.podLabels Extra labels for Synapse worker pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/
    ##
    podLabels: {}
    ## @param worker.default.podAnnotations Annotations for Synapse worker pods
    ## ref: https://kubernetes.io/docs/concepts/overview/working-with-objects/annotations/
    ##
    podAnnotations: {}
    ## @param worker.default.podAffinityPreset Pod affinity preset. Ignored if `synapse.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAffinityPreset: ""
    ## @param worker.default.podAntiAffinityPreset Pod anti-affinity preset. Ignored if `synapse.affinity` is set. Allowed values: `soft` or `hard`
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#inter-pod-affinity-and-anti-affinity
    ##
    podAntiAffinityPreset: soft
    ## Node synapse.affinity preset
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/#node-affinity
    ##
    nodeAffinityPreset:
      ## @param worker.default.nodeAffinityPreset.type Node affinity preset type. Ignored if `synapse.affinity` is set. Allowed values: `soft` or `hard`
      ##
      type: ""
      ## @param worker.default.nodeAffinityPreset.key Node label key to match. Ignored if `synapse.affinity` is set
      ##
      key: ""
      ## @param worker.default.nodeAffinityPreset.values Node label values to match. Ignored if `synapse.affinity` is set
      ## E.g.
      ## values:
      ##   - e2e-az1
      ##   - e2e-az2
      ##
      values: []
    ## @param worker.default.affinity Affinity for Synapse worker pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
    ## NOTE: `synapse.podAffinityPreset`, `synapse.podAntiAffinityPreset`, and `synapse.nodeAffinityPreset` will be ignored when it's set
    ##
    affinity: {}
    ## @param worker.default.nodeSelector Node labels for Synapse worker pods assignment
    ## ref: https://kubernetes.io/docs/concepts/scheduling-eviction/assign-pod-node/
    ##
    nodeSelector: {}
    ## @param worker.default.tolerations Tolerations for Synapse worker pods assignment
    ## ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
    ##
    tolerations: []
    ## ONLY FOR DEPLOYMENTS:
    ## @param worker.default.updateStrategy.type Synapse worker deployment strategy type
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/deployment/#strategy
    ## ONLY FOR STATEFULSETS:
    ## @param worker.default.updateStrategy.type Synapse worker statefulset strategy type
    ## ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#update-strategies
    ##
    updateStrategy:
      ## ONLY FOR DEPLOYMENTS:
      ## Can be set to RollingUpdate or Recreate
      ## ONLY FOR STATEFULSETS:
      ## Can be set to RollingUpdate or OnDelete
      ##
      type: Recreate
    ## ONLY FOR STATEFULSETS:
    ## @param worker.default.podManagementPolicy Pod management policy for Synapse worker statefulset
    ## Ref: https://kubernetes.io/docs/concepts/workloads/controllers/statefulset/#pod-management-policies
    ##
    podManagementPolicy: OrderedReady
    ## @param worker.default.priorityClassName Synapse worker pods' priorityClassName
    ##
    priorityClassName: ""
    ## @param worker.default.topologySpreadConstraints Topology Spread Constraints for Synapse worker pod assignment spread across your cluster among failure-domains
    ## Ref: https://kubernetes.io/docs/concepts/workloads/pods/pod-topology-spread-constraints/#spread-constraints-for-pods
    ##
    topologySpreadConstraints: []
    ## @param worker.default.schedulerName Name of the k8s scheduler (other than default) for Synapse worker pods
    ## ref: https://kubernetes.io/docs/tasks/administer-cluster/configure-multiple-schedulers/
    ##
    schedulerName: ""
    ## @param runtimeClassName Name of the runtime class name for Synapse worker pods
    ## ref: https://kubernetes.io/docs/concepts/containers/runtime-class/#usage
    ##
    runtimeClassName: ""
    ## @param worker.default.terminationGracePeriodSeconds Seconds Synapse worker pods need to terminate gracefully
    ## ref: https://kubernetes.io/docs/concepts/workloads/pods/pod/#termination-of-pods
    ##
    terminationGracePeriodSeconds: ""
    ## @param worker.default.lifecycleHooks for Synapse worker containers to automate configuration before or after startup
    ##
    lifecycleHooks: {}
    ## @param worker.default.extraEnvVars Array with extra environment variables to add to Synapse worker containers
    ## e.g:
    ## extraEnvVars:
    ##   - name: FOO
    ##     value: "bar"
    ##
    extraEnvVars: []
    ## @param worker.default.extraEnvVarsCM Name of existing ConfigMap containing extra env vars for Synapse worker containers
    ##
    extraEnvVarsCM: ""
    ## @param worker.default.extraEnvVarsSecret Name of existing Secret containing extra env vars for Synapse worker containers
    ##
    extraEnvVarsSecret: ""
    ## @param worker.default.extraVolumes Optionally specify extra list of additional volumes for the Synapse worker pods
    ##
    extraVolumes: []
    ## @param worker.default.extraVolumeMounts Optionally specify extra list of additional volumeMounts for the Synapse worker containers
    ##
    extraVolumeMounts: []
    ## @param worker.default.sidecars Add additional sidecar containers to the Synapse worker pods
    ## e.g:
    ## sidecars:
    ##   - name: your-image-name
    ##     image: your-image
    ##     imagePullPolicy: Always
    ##     ports:
    ##       - name: portname
    ##         containerPort: 1234
    ##
    sidecars: []
    ## Pod Disruption Budget configuration
    ## ref: https://kubernetes.io/docs/tasks/run-application/configure-pdb
    ## @param worker.default.pdb.create Enable/disable a Pod Disruption Budget creation
    ## @param worker.default.pdb.minAvailable Minimum number/percentage of pods that should remain scheduled
    ## @param worker.default.pdb.maxUnavailable Maximum number/percentage of pods that may be made unavailable. Defaults to `1` if both `synapse.pdb.minAvailable` and `synapse.pdb.maxUnavailable` are empty.
    ##
    pdb:
      create: false
      minAvailable: ""
      maxUnavailable: ""
    ## Autoscaling configuration
    ## ref: https://kubernetes.io/docs/concepts/workloads/autoscaling/
    ##
    autoscaling:
      ## @param worker.default.autoscaling.hpa.enabled Enable HPA for Synapse worker pods
      ## @param worker.default.autoscaling.hpa.minReplicas Minimum number of replicas
      ## @param worker.default.autoscaling.hpa.maxReplicas Maximum number of replicas
      ## @param worker.default.autoscaling.hpa.targetCPU Target CPU utilization percentage
      ## @param worker.default.autoscaling.hpa.targetMemory Target Memory utilization percentage
      ##
      hpa:
        enabled: false
        minReplicas: 1
        maxReplicas: 3
        targetCPU: 75
        targetMemory: ""
      ## @param worker.default.autoscaling.vpa.enabled Enable VPA for Synapse worker pods
      ## @param worker.default.autoscaling.vpa.annotations Annotations for VPA resource
      ## @param worker.default.autoscaling.vpa.controlledResources VPA List of resources that the vertical pod autoscaler can control. Defaults to cpu and memory
      ## @param worker.default.autoscaling.vpa.maxAllowed VPA Max allowed resources for the pod
      ## @param worker.default.autoscaling.vpa.minAllowed VPA Min allowed resources for the pod
      ##
      vpa:
        enabled: false
        annotations: {}
        controlledResources: []
        maxAllowed: {}
        minAllowed: {}
        ## @param worker.default.autoscaling.vpa.updatePolicy.updateMode Autoscaling update policy
        ## Specifies whether recommended updates are applied when a Pod is started and whether recommended updates are applied during the life of a Pod
        ## Possible values are "Off", "Initial", "Recreate", and "Auto".
        ##
        updatePolicy:
          updateMode: Auto
    ## Synapse worker service parameters
    ##
    service:
      ## @param worker.default.service.type Synapse worker service type
      ##
      type: ClusterIP
      ## @param worker.default.service.ports.listener Synapse worker listener port
      ## @param worker.default.service.ports.replication Synapse worker replication port
      ##
      ports:
        listener: 8083
        replication: 9083
      ## Node ports to expose
      ## @param worker.default.service.nodePorts.listener Node port for worker listener
      ## @param worker.default.service.nodePorts.replication Node port for worker replication
      ## NOTE: choose port between <30000-32767>
      ##
      nodePorts:
        listener: ""
        replication: ""
      ## @param worker.default.service.clusterIP Synapse worker service Cluster IP
      ## e.g.:
      ## clusterIP: None
      ##
      clusterIP: ""
      ## @param worker.default.service.loadBalancerIP Synapse worker service Load Balancer IP
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/#type-loadbalancer
      ##
      loadBalancerIP: ""
      ## @param worker.default.service.loadBalancerSourceRanges Synapse worker service Load Balancer sources
      ## ref: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/#restrict-access-for-loadbalancer-service
      ## e.g:
      ## loadBalancerSourceRanges:
      ##   - 10.10.10.0/24
      ##
      loadBalancerSourceRanges: []
      ## @param worker.default.service.externalTrafficPolicy Synapse worker service external traffic policy
      ## ref http://kubernetes.io/docs/tasks/access-application-cluster/create-external-load-balancer/#preserving-the-client-source-ip
      ##
      externalTrafficPolicy: Cluster
      ## @param worker.default.service.annotations Additional custom annotations for Synapse worker service
      ##
      annotations: {}
      ## @param worker.default.service.extraPorts Extra ports to expose in Synapse worker service (normally used with the `sidecars` value)
      ##
      extraPorts: []
      ## @param worker.default.service.sessionAffinity Control where client requests go, to the same pod or round-robin
      ## Values: ClientIP or None
      ## ref: https://kubernetes.io/docs/concepts/services-networking/service/
      ##
      sessionAffinity: None
      ## @param worker.default.service.sessionAffinityConfig Additional settings for the sessionAffinity
      ## sessionAffinityConfig:
      ##   clientIP:
      ##     timeoutSeconds: 300
      ##
      sessionAffinityConfig: {}
    ## Network Policies
    ## Ref: https://kubernetes.io/docs/concepts/services-networking/network-policies/
    ##
    networkPolicy:
      ## @param worker.default.networkPolicy.enabled Specifies whether a NetworkPolicy should be created
      ##
      enabled: true
      ## @param worker.default.networkPolicy.allowExternal Don't require server label for connections
      ## The Policy model to apply. When set to false, only pods with the correct
      ## server label will have network access to the ports server is listening
      ## on. When true, server will accept connections from any source
      ## (with the correct destination port).
      ##
      allowExternal: false
      ## @param worker.default.networkPolicy.allowExternalEgress Allow the pod to access any range of port and all destinations.
      ##
      allowExternalEgress: false
      ## @param worker.default.networkPolicy.addExternalClientAccess Allow access from pods with client label set to "true". Ignored if `networkPolicy.allowExternal` is true.
      ##
      addExternalClientAccess: true
      ## @param worker.default.networkPolicy.extraIngress [array] Add extra ingress rules to the NetworkPolicy
      ## e.g:
      ## extraIngress:
      ##   - ports:
      ##       - port: 1234
      ##     from:
      ##       - podSelector:
      ##           - matchLabels:
      ##               - role: frontend
      ##       - podSelector:
      ##           - matchExpressions:
      ##               - key: role
      ##                 operator: In
      ##                 values:
      ##                   - frontend
      extraIngress: []
      ## @param worker.default.networkPolicy.extraEgress [array] Add extra ingress rules to the NetworkPolicy (ignored if allowExternalEgress=true)
      ## e.g:
      ## extraEgress:
      ##   - ports:
      ##       - port: 1234
      ##     to:
      ##       - podSelector:
      ##           - matchLabels:
      ##               - role: frontend
      ##       - podSelector:
      ##           - matchExpressions:
      ##               - key: role
      ##                 operator: In
      ##                 values:
      ##                   - frontend
      ##
      extraEgress: []
      ## @param worker.default.networkPolicy.ingressPodMatchLabels [object] Labels to match to allow traffic from other pods. Ignored if `networkPolicy.allowExternal` is true.
      ## e.g:
      ## ingressPodMatchLabels:
      ##   my-client: "true"
      #
      ingressPodMatchLabels: {}
      ## @param worker.default.networkPolicy.ingressNSMatchLabels [object] Labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
      ## @param worker.default.networkPolicy.ingressNSPodMatchLabels [object] Pod labels to match to allow traffic from other namespaces. Ignored if `networkPolicy.allowExternal` is true.
      ##
      ingressNSMatchLabels: {}
      ingressNSPodMatchLabels: {}
    ## Prometheus metrics
    ##
    metrics:
      ## @param worker.default.metrics.enabled Enable the export of Prometheus metrics
      ##
      enabled: false
      ## Prometheus Operator ServiceMonitor configuration
      ##
      serviceMonitor:
        ## @param worker.default.metrics.serviceMonitor.enabled if `true`, creates a Prometheus Operator ServiceMonitor (also requires `metrics.enabled` to be `true`)
        ##
        enabled: false
        ## @param worker.default.metrics.serviceMonitor.namespace Namespace in which Prometheus is running
        ##
        namespace: ""
        ## @param worker.default.metrics.serviceMonitor.annotations Additional custom annotations for the ServiceMonitor
        ##
        annotations: {}
        ## @param worker.default.metrics.serviceMonitor.labels Extra labels for the ServiceMonitor
        ##
        labels: {}
        ## @param worker.default.metrics.serviceMonitor.jobLabel The name of the label on the target service to use as the job name in Prometheus
        ##
        jobLabel: ""
        ## @param worker.default.metrics.serviceMonitor.honorLabels honorLabels chooses the metric's labels on collisions with target labels
        ##
        honorLabels: false
        ## @param worker.default.metrics.serviceMonitor.tlsConfig [object] TLS configuration used for scrape endpoints used by Prometheus
        ##
        tlsConfig: {}
        ## @param worker.default.metrics.serviceMonitor.interval Interval at which metrics should be scraped.
        ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
        ## e.g:
        ## interval: 10s
        ##
        interval: ""
        ## @param worker.default.metrics.serviceMonitor.scrapeTimeout Timeout after which the scrape is ended
        ## ref: https://github.com/coreos/prometheus-operator/blob/master/Documentation/api.md#endpoint
        ## e.g:
        ## scrapeTimeout: 10s
        ##
        scrapeTimeout: ""
        ## @param worker.default.metrics.serviceMonitor.metricRelabelings Specify additional relabeling of metrics
        ##
        metricRelabelings: []
        ## @param worker.default.metrics.serviceMonitor.relabelings Specify general relabeling
        ##
        relabelings: []
        ## @param worker.default.metrics.serviceMonitor.selector Prometheus instance selector labels
        ## ref: https://github.com/bitnami/charts/tree/main/bitnami/prometheus-operator#prometheus-configuration
        ## selector:
        ##   prometheus: my-prometheus
        ##
        selector: {}
    ## @param worker.default.annotations Additional custom annotations for Synapse master resource
    ##
    annotations: {}

  ## @section Generic worker section, all configuration is an override on the default worker configuration.
  ##
  ## The generic worker can be used to handle most endpoints.
  ## Be careful when enabling the sync endpoints as they can eat large amounts of
  ## resources. Refer to the information URL above for more info.
  ## Proper load balancing with the K8s Ingress resource may not be possible.
  ##
  ## @param worker.generic_worker.enabled Enable the generic_worker
  ## @param worker.generic_worker.generic Mark the worker as being generic
  ## @param worker.generic_worker.listeners The listeners configured for this worker
  ## @param worker.generic_worker.csPaths The client-server paths to route to this worker.
  ## @param worker.generic_worker.paths The general paths to route to this worker.
  generic_worker:
    enabled: false
    generic: true
    listeners: [client, federation]
    csPaths:
      ## Sync requests
      # - "/_matrix/client/(r0|v3)/sync$"
      - "/_matrix/client/(api/v1|r0|v3)/events$"
      # - "/_matrix/client/(api/v1|r0|v3)/initialSync$"
      # - "/_matrix/client/(api/v1|r0|v3)/rooms/[^/]+/initialSync$"

      ## Client API requests
      - "/_matrix/client/(api/v1|r0|v3|unstable)/createRoom$"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/publicRooms$"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/joined_members$"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/context/"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/members$"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/state$"
      - "/_matrix/client/v1/rooms/.*/hierarchy$"
      - "/_matrix/client/unstable/org.matrix.msc2716/rooms/.*/batch_send$"
      - "/_matrix/client/unstable/im.nheko.summary/rooms/.*/summary$"
      - "/_matrix/client/(r0|v3|unstable)/account/3pid$"
      - "/_matrix/client/(r0|v3|unstable)/account/whoami$"
      - "/_matrix/client/(r0|v3|unstable)/devices$"
      - "/_matrix/client/versions$"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/voip/turnServer$"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/event/"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/joined_rooms$"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/search$"

      ## Encryption requests
      - "/_matrix/client/(r0|v3|unstable)/keys/query$"
      - "/_matrix/client/(r0|v3|unstable)/keys/changes$"
      - "/_matrix/client/(r0|v3|unstable)/keys/claim$"
      - "/_matrix/client/(r0|v3|unstable)/room_keys/"

      ## Registration/login requests
      - "/_matrix/client/(api/v1|r0|v3|unstable)/login$"
      - "/_matrix/client/(r0|v3|unstable)/register$"
      - "/_matrix/client/v1/register/m.login.registration_token/validity$"

      ## Event sending requests
      - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/redact"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/send"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/state/"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/(join|invite|leave|ban|unban|kick)$"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/join/"
      - "/_matrix/client/(api/v1|r0|v3|unstable)/profile/"

      ## User directory search requests
      - "/_matrix/client/(r0|v3|unstable)/user_directory/search"

      ## Worker event streams
      ## See https://matrix-org.github.io/synapse/latest/workers.html#stream-writers
      ##

      ## The typing event stream
      # - "/_matrix/client/(api/v1|r0|v3|unstable)/rooms/.*/typing"

      ## The to_device event stream
      # - "/_matrix/client/(r0|v3|unstable)/sendToDevice/"

      ## The account_data event stream
      # - "/_matrix/client/(r0|v3|unstable)/.*/tags"
      # - "/_matrix/client/(r0|v3|unstable)/.*/account_data"

      ## The receipts event stream
      # - "/_matrix/client/(r0|v3|unstable)/rooms/.*/receipt"
      # - "/_matrix/client/(r0|v3|unstable)/rooms/.*/read_markers"

      ## The presence event stream
      # - "/_matrix/client/(api/v1|r0|v3|unstable)/presence/"

    paths:
      ## Federation requests
      - "/_matrix/federation/v1/event/"
      - "/_matrix/federation/v1/state/"
      - "/_matrix/federation/v1/state_ids/"
      - "/_matrix/federation/v1/backfill/"
      - "/_matrix/federation/v1/get_missing_events/"
      - "/_matrix/federation/v1/publicRooms"
      - "/_matrix/federation/v1/query/"
      - "/_matrix/federation/v1/make_join/"
      - "/_matrix/federation/v1/make_leave/"
      - "/_matrix/federation/(v1|v2)/send_join/"
      - "/_matrix/federation/(v1|v2)/send_leave/"
      - "/_matrix/federation/(v1|v2)/invite/"
      - "/_matrix/federation/v1/event_auth/"
      - "/_matrix/federation/v1/exchange_third_party_invite/"
      - "/_matrix/federation/v1/user/devices/"
      - "/_matrix/key/v2/query"
      - "/_matrix/federation/v1/hierarchy/"

      ## Inbound federation transaction request
      - "/_matrix/federation/v1/send/"

  ## To separate the generic worker into specific concerns - for example federation transaction receiving;
  ## NB; This worker should have incoming traffic routed based on source IP, which is
  ##     left as an exercise to the reader.
  ## https://github.com/matrix-org/synapse/blob/develop/docs/workers.md#load-balancing
  # federation_reader:
  #   enabled: true
  #   generic: true
  #   listeners: [federation]
  #   paths:
  #     - "/_matrix/federation/v1/send/"

  ## Or /sync handling.
  ## NB; Care should be taken to route users to the same instance when scaling this worker,
  ##     this is left as an exercise to the reader.
  ## https://github.com/matrix-org/synapse/blob/develop/docs/workers.md#load-balancing
  # synchrotron:
  #   enabled: true
  #   generic: true
  #   listeners: [client]
  #   csPaths:
  #     - "/_matrix/client/(v2_alpha|r0|v3)/sync$"
  #     - "/_matrix/client/(api/v1|v2_alpha|r0|v3)/events$"
  #     - "/_matrix/client/(api/v1|r0|v3)/initialSync$"
  #     - "/_matrix/client/(api/v1|r0|v3)/rooms/[^/]+/initialSync$"

  ## @section Specialized - non-generic workers below; configuration also overrides the default worker configuration

  ## This worker deals with pushing notifications.
  ## NB; Only one instance of this worker can be run at a time, refer to the
  ## information URL above.
  ##
  #pusher:
  #  enabled: false

  ## This worker handles sending data to registered appservices.
  ## NB; Only one instance of this worker can be run at at time, refer to the
  ## information URL above.
  ##
  #appservice:
  #  enabled: false
  #  generic: true
  #  name: appservices

  ## This worker handles sending federation traffic to other Synapse servers.
  ##
  #federation_sender:
  #  enabled: false

  ## Specialized workers can also be run as multiple separate instances,
  ## make sure to read the relevant documentation.
  ##
  # federation_sender_other:
  #   app: federation_sender
  #   enabled: false

  ## @param worker.media_repository.enabled Enable worker that deals with serving and storing media.
  ## @param worker.media_repository.listeners The listeners configured for this worker
  ## @param worker.media_repository.csPaths The client-server paths to route to this worker.
  ## @param worker.media_repository.paths The general paths to route to this worker.
  ## NB; Running multiple instances will conflict with background jobs.
  ##
  media_repository:
    enabled: false
    listeners: [media]
    csPaths:
      - "/_matrix/media/.*"
      - "/_matrix/client/v1/media/.*"
      - "/_matrix/federation/v1/media/.*"
      - "/_synapse/admin/v1/purge_media_cache$"
      - "/_synapse/admin/v1/room/.*/media"
      - "/_synapse/admin/v1/user/.*/media"
      - "/_synapse/admin/v1/media/"
      - "/_synapse/admin/v1/quarantine_media/"
      - "/_synapse/admin/v1/users/.*/media$"
    paths:
      - "/_matrix/media/.*"
      - "/_matrix/client/v1/media/.*"
      - "/_matrix/federation/v1/media/.*"

  ## This worker deals with user directory searches.
  ##
  #user_dir:
  #  enabled: false
  #  name: userdir
  #  listeners: [client]
  #  csPaths:
  #    - "/_matrix/client/(api/v1|r0|v3|unstable)/user_directory/search$"

  ## This worker handles key uploads, and may also stub out presence if that is
  ## disabled. If you set extraConfig.use_presence=false then you may want to
  ## uncomment the second path.
  ##
  #frontend_proxy:
  #  enabled: false
  #  listeners: [client]
  #  csPaths:
  #    - "/_matrix/client/(api/v1|r0|v3|unstable)/keys/upload"
  #  # - "/_matrix/client/(api/v1|r0|v3|unstable)/presence/[^/]+/status"

## @section Traffic Exposure Parameters
##

## Synapse ingress parameters
## ref: http://kubernetes.io/docs/concepts/services-networking/ingress/
##
ingress:
  ## @param ingress.enabled Enable ingress record generation for Synapse
  ##
  enabled: false
  ## @param ingress.pathType Ingress path type
  ##
  pathType: ImplementationSpecific
  ## @param ingress.apiVersion Force Ingress API version (automatically detected if not set)
  ##
  apiVersion: ""
  ## @param ingress.hostname Default host for the ingress record
  ##
  hostname: "synapse.local"
  ## @param ingress.ingressClassName IngressClass that will be used to implement the Ingress (Kubernetes 1.18+)
  ## This is supported in Kubernetes 1.18+ and required if you have more than one IngressClass marked as the default for your cluster .
  ## ref: https://kubernetes.io/blog/2020/04/02/improvements-to-the-ingress-api-in-kubernetes-1.18/
  ##
  ingressClassName: ""
  ## @param ingress.path Default path for the ingress record
  ## NOTE: You may need to set this to '/*' in order to use this with ALB ingress controllers
  ##
  # FIXME this is not used anymore
  path: /
  ## @param ingress.annotations Additional annotations for the Ingress resource. To enable certificate autogeneration, place here your cert-manager annotations.
  ## Use this parameter to set the required annotations for cert-manager, see
  ## ref: https://cert-manager.io/docs/usage/ingress/#supported-annotations
  ## e.g:
  ## annotations:
  ##   kubernetes.io/ingress.class: nginx
  ##   cert-manager.io/cluster-issuer: cluster-issuer-name
  ##
  annotations: {}
  ## @param ingress.tls Enable TLS configuration for the host defined at `ingress.hostname` parameter
  ## TLS certificates will be retrieved from a TLS secret with name: `{{- printf "%s-tls" .Values.ingress.hostname }}`
  ## You can:
  ##   - Use the `ingress.secrets` parameter to create this TLS secret
  ##   - Rely on cert-manager to create it by setting the corresponding annotations
  ##   - Rely on Helm to create self-signed certificates by setting `ingress.selfSigned=true`
  ##
  tls: false
  ## @param ingress.selfSigned Create a TLS secret for this ingress record using self-signed certificates generated by Helm
  ##
  selfSigned: false
  ## @param ingress.extraHosts An array with additional hostname(s) to be covered with the ingress record
  ## e.g:
  ## extraHosts:
  ##   - name: synapse.local
  ##     path: /
  ##
  extraHosts: []
  ## @param ingress.extraPaths An array with additional arbitrary paths that may need to be added to the ingress under the main host
  ## e.g:
  ## extraPaths:
  ## - path: /*
  ##   backend:
  ##     serviceName: ssl-redirect
  ##     servicePort: use-annotation
  ##
  extraPaths: []
  ## @param ingress.extraTls TLS configuration for additional hostname(s) to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#tls
  ## e.g:
  ## extraTls:
  ## - hosts:
  ##     - synapse.local
  ##   secretName: synapse.local-tls
  ##
  extraTls: []
  ## @param ingress.secrets Custom TLS certificates as secrets
  ## NOTE: 'key' and 'certificate' are expected in PEM format
  ## NOTE: 'name' should line up with a 'secretName' set further up
  ## If it is not set, and you're using cert-manager, this is unneeded, as it will create a secret for you with valid certificates
  ## If it is not set, and you're NOT using cert-manager either, self-signed certificates will be created valid for 365 days
  ## It is also possible to create and manage the certificates outside of this helm chart
  ## Please see README.md for more information
  ## e.g:
  ## secrets:
  ##   - name: synapse.local-tls
  ##     key: |-
  ##       -----BEGIN RSA PRIVATE KEY-----
  ##       ...
  ##       -----END RSA PRIVATE KEY-----
  ##     certificate: |-
  ##       -----BEGIN CERTIFICATE-----
  ##       ...
  ##       -----END CERTIFICATE-----
  ##
  secrets: []
  ## @param ingress.extraRules Additional rules to be covered with this ingress record
  ## ref: https://kubernetes.io/docs/concepts/services-networking/ingress/#ingress-rules
  ## e.g:
  ## extraRules:
  ## - host: example.local
  ##     http:
  ##       path: /
  ##       backend:
  ##         service:
  ##           name: example-svc
  ##           port:
  ##             name: http
  ##
  extraRules: []
  ## @param ingress.includeSynapseAdminApis Allow access to synapse admin apis under /_synapse
  includeSynapseAdminApis: true

## @section Default init containers Parameters

defaultInitContainers:
  ## 'volume-permissions' init container
  ## Changes the owner and group of the persistent volume mount(s) point(s) to runAsUser:fsGroup values
  ##   based on the *podSecurityContext/*containerSecurityContext parameters
  ##
  volumePermissions:
    ## @param defaultInitContainers.volumePermissions.enabled Enable init container that adapts the owner/group of the PV mount(s) point(s)
    ##
    enabled: false
    ## OS Shell + Utility image
    ## ref: https://hub.docker.com/r/bitnami/os-shell
    ## @param defaultInitContainers.volumePermissions.image.registry [default: REGISTRY_NAME] "volume-permissions" init-containers' image registry
    ## @param defaultInitContainers.volumePermissions.image.repository [default: REPOSITORY_NAME/os-shell] "volume-permissions" init-containers' image repository
    ## @param defaultInitContainers.volumePermissions.image.tag "volume-permissions" init-containers' image tag (immutable tags are recommended)
    ## @param defaultInitContainers.volumePermissions.image.digest "volume-permissions" init-containers' image digest in the way sha256:aa.... Please note this parameter, if set, will override the tag
    ## @param defaultInitContainers.volumePermissions.image.pullPolicy "volume-permissions" init-containers' image pull policy
    ## @param defaultInitContainers.volumePermissions.image.pullSecrets "volume-permissions" init-containers' image pull secrets
    ##
    image:
      registry: docker.io
      repository: bitnami/os-shell
      tag: 12-debian-12-r46
      digest: ""
      pullPolicy: IfNotPresent
      ## Optionally specify an array of imagePullSecrets.
      ## Secrets must be manually created in the namespace.
      ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
      ## Example:
      ## pullSecrets:
      ##   - myRegistryKeySecretName
      ##
      pullSecrets: []
    ## Configure "volume-permissions" init-container Security Context
    ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/security-context/#set-the-security-context-for-a-container
    ## @param defaultInitContainers.volumePermissions.containerSecurityContext.enabled Enabled "volume-permissions" init-containers' Security Context
    ## @param defaultInitContainers.volumePermissions.containerSecurityContext.seLinuxOptions [object,nullable] Set SELinux options in "volume-permissions" init-containers
    ## @param defaultInitContainers.volumePermissions.containerSecurityContext.runAsUser Set runAsUser in "volume-permissions" init-containers' Security Context
    ## NOTE: when runAsUser is set to special value "auto", init container will try to chown the
    ##   data folder to auto-determined user&group, using commands: `id -u`:`id -G | cut -d" " -f2`
    ##   "auto" is especially useful for OpenShift which has scc with dynamic user ids (and 0 is not allowed)
    ## @param defaultInitContainers.volumePermissions.containerSecurityContext.privileged Set privileged in "volume-permissions" init-containers' Security Context
    ## @param defaultInitContainers.volumePermissions.containerSecurityContext.allowPrivilegeEscalation Set allowPrivilegeEscalation in "volume-permissions" init-containers' Security Context
    ## @param defaultInitContainers.volumePermissions.containerSecurityContext.capabilities.add List of capabilities to be added in "volume-permissions" init-containers
    ## @param defaultInitContainers.volumePermissions.containerSecurityContext.capabilities.drop List of capabilities to be dropped in "volume-permissions" init-containers
    ## @param defaultInitContainers.volumePermissions.containerSecurityContext.seccompProfile.type Set seccomp profile in "volume-permissions" init-containers
    ##
    containerSecurityContext:
      enabled: true
      seLinuxOptions: {}
      runAsUser: 0
      privileged: false
      allowPrivilegeEscalation: false
      capabilities:
        add: []
        drop: ["ALL"]
      seccompProfile:
        type: "RuntimeDefault"
    ## "volume-permissions" init container resource requests and limits
    ## ref: http://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/
    ## @param defaultInitContainers.volumePermissions.resourcesPreset Set "volume-permissions" init container resources according to one common preset (allowed values: none, nano, micro, small, medium, large, xlarge, 2xlarge). This is ignored if defaultInitContainers.volumePermissions.resources is set (defaultInitContainers.volumePermissions.resources is recommended for production).
    ## More information: https://github.com/bitnami/charts/blob/main/bitnami/common/templates/_resources.tpl#L15
    ##
    resourcesPreset: "nano"
    ## @param defaultInitContainers.volumePermissions.resources Set "volume-permissions" init container requests and limits for different resources like CPU or memory (essential for production workloads)
    ## E.g:
    ## resources:
    ##   requests:
    ##     cpu: 2
    ##     memory: 512Mi
    ##   limits:
    ##     cpu: 3
    ##     memory: 1024Mi
    ##
    resources: {}

## @section Other Parameters
##

## ServiceAccount configuration
## ref: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/
##
serviceAccount:
  ## @param serviceAccount.create Specifies whether a ServiceAccount should be created
  ##
  create: true
  ## @param serviceAccount.name The name of the ServiceAccount to use.
  ## If not set and create is true, a name is generated using the common.names.fullname template
  ##
  name: ""
  ## @param serviceAccount.annotations Additional Service Account annotations (evaluated as a template)
  ##
  annotations: {}
  ## @param serviceAccount.automountServiceAccountToken Automount service account token for the server service account
  ##
  automountServiceAccountToken: true

## @section Synapse Homeserver configuration
##

## Ref: https://element-hq.github.io/synapse/latest/usage/configuration/config_documentation.html
synapse:
  ## @param synapse.logging.logLevel The minimum loglevel to filter log messages by
  ## @param synapse.logging.useStructuredLogging The TerseJsonLogger is used if `true`, precise logging is used otherwise.
  ## @param synapse.logging.extraLoggers A list of extra loggers to configure
  logging:
    logLevel: "INFO"
    useStructuredLogging: false
    extraLoggers: []
  ## @param synapse.config.directory The folder in which configuration is read and placed
  ## @param synapse.config.homeServerConfigFile The location of the home server configuration file
  config:
    directory: "/synapse/config/conf.d"
    homeServerConfigFile: "/synapse/config/homeserver.yaml"
  ## @param synapse.serverName This sets the public-facing domain of the server.
  # The `server_name` name will appear at the end of usernames and room addresses created on your server. For example
  # if the `server_name` was `example.com`, usernames on your server would be in the format `@user:example.com`.
  #
  # In most cases you should avoid using a matrix specific subdomain such as `matrix.example.com`
  # `synapse.example.com` as the `server_name` for the same reasons you wouldn't use `user@email.example.com` as you
  # email address. See [here](https://element-hq.github.io/synapse/latest/delegate.html) for information on how to
  # host Synapse on a subdomain while preserving a clean `server_name`.
  #
  # The `server_name` cannot be changed later so it is important to configure this correctly before you start Synapse.
  # It should be all lowercase and may contain an explicit port.
  serverName: "synapse.internal"
  ## @param synapse.webClientLocation The URL to the web client
  webClientLocation: ~
  ## @param synapse.reportStats.enabled Whether to report homeserver usage statistics
  ## @param synapse.reportStats.endpoint The endpoint to report homeserver usage statistics to.
  reportStats:
    enabled: false
    endpoint: ""
  ## @param synapse.recaptcha.enabled Set to true to require users to complete a CAPTCHA test when registering an account. Requires a valid ReCaptcha public/private key.
  ## @param synapse.recaptcha.publicKey This homeserver's ReCAPTCHA public key. Must be specified if `synapse.recaptcha.enabled` is `true`.
  recaptcha:
    enabled: false
    publicKey: ""
  ## @param synapse.turnUris The public URIs of the TURN server to give to clients.
  turnUris: []
  ## @param synapse.enableRegistration Enable registration for new users.
  enableRegistration: false
  ## @extra synapse.trustedKeyServers The trusted servers to download signing keys from (default the matrix.org server is trusted, without verifying it's key).
  ## E.g:
  ##  trusted_key_servers:
  ##    - server_name: my_trusted_server.example.com
  ##      verify_keys:
  ##        ed25519:auto: abcdefghijklmnopqrstuvwxyzabcdefghijklmopqr
  ##    - server_name: my_other_trusted_server.example.com
  ## @skip synapse.trustedKeyServers[0].server_name
  trustedKeyServers:
    - server_name: "matrix.org"
  ## @param synapse.registrationSharedSecret If set, allows registration of standard or admin accounts by anyone who has the shared secret, even if enable_registration is not set.
  registrationSharedSecret: ""
  ## @param synapse.formSecret A secret which is used to calculate HMACs for form values, to stop falsification of values. Must be specified for the User Consent forms to work.
  formSecret: ""
  ## @param synapse.suppressKeyServerWarning Set the following to true to disable the warning that is emitted when the trusted_key_servers include "matrix.org".
  suppressKeyServerWarning: false
  ## Background updates are database updates that are run in the background in batches. The duration, minimum batch size, default batch size, whether to sleep between batches and if so, how long to sleep can all be configured. This is helpful to speed up or slow down the updates.
  ## @param synapse.backgroundUpdates.duration How long in milliseconds to run a batch of background updates for.
  ## @param synapse.backgroundUpdates.sleepEnabled Whether to sleep between updates.
  ## @param synapse.backgroundUpdates.sleepDuration If sleeping between updates, how long in milliseconds to sleep for.
  ## @param synapse.backgroundUpdates.minBatchSize Minimum size a batch of background updates can be. Must be greater than 0.
  ## @param synapse.backgroundUpdates.defaultBatchSize The batch size to use for the first iteration of a new background update.
  backgroundUpdates:
    duration: 100
    sleepEnabled: true
    sleepDuration: 1000
    minBatchSize: 1
    defaultBatchSize: 100
  ## Rate limiting
  ## This is a ratelimiting option for messages that ratelimits sending based on the account the client is using.
  ## @param synapse.rateLimiting.messaging.perSecond Number of requests a client can send per second.
  ## @param synapse.rateLimiting.messaging.burstCount Number of requests a client can send before being throttled.
  rateLimiting:
    messaging:
      perSecond: 0.2
      burstCount: 10.0
  ## @param synapse.maxEventDelayDuration The maximum allowed duration by which sent events can be delayed, as per MSC4140. Must be a positive value if set. If `null` or unset, sending of delayed events is disallowed.
  ## ref: https://github.com/matrix-org/matrix-spec-proposals/pull/4140
  maxEventDelayDuration: null
  ## @param synapse.serveServerWellknown By default, other servers will try to reach our server on port 8448, which can be inconvenient in some environments. Provided `https://<server_name>/` on port 443 is routed to Synapse, this option configures Synapse to serve a file at `https://<server_name>/.well-known/matrix/server`. This will tell other servers to send traffic to port 443 instead.
  ## ref: https://element-hq.github.io/synapse/latest/delegate.html
  serveServerWellknown: false
  ## @param synapse.avatar.maxSize The largest permissible file size in bytes for a user avatar. Defaults to no restriction. Use M for MB and K for KBNote that user avatar changes will not work if this is set without using Synapse's media repository.
  ## @param synapse.avatar.allowedMimeTypes The MIME types allowed for user avatars. Defaults to no restriction. Note that user avatar changes will not work if this is set without using Synapse's media repository.
  avatar:
    maxSize: null
    allowedMimeTypes: null
  ## @param synapse.forgottenRoomRetentionPeriod How long to keep locally forgotten rooms before purging them from the DB. A value of null means it's disabled.
  forgottenRoomRetentionPeriod: null
  retention:
    ## @param synapse.retention.enabled If this feature is enabled, Synapse will regularly look for and purge events which are older than the room's maximum retention period. Synapse will also filter events received over federation so that events that should have been purged are ignored and not stored again.
    ## ref: https://element-hq.github.io/synapse/latest/message_retention_policies.html
    enabled: false
    ## @extra synapse.retention.defaultPolicy Default message retention policy. If set, Synapse will apply it to rooms that lack the `m.room.retention` state event.
    defaultPolicy:
      lifetime:
        ## @param synapse.retention.defaultPolicy.lifetime.min Minimum message retention time of the default message retention policy. Synapse doesn't take this option into account yet.
        min: null
        ## @param synapse.retention.defaultPolicy.lifetime.max Maximum message retention time of the default message retention policy.
        max: null
    allowedLifetime:
      ## @param synapse.retention.allowedLifetime.min Retention policy limit. If set, and the state of a room contains a `m.room.retention` event in its state which contains a `min_lifetime` that's beyond this bound, Synapse will cap the room's policy to these limits when running purge jobs.
      min: null
      ## @param synapse.retention.allowedLifetime.max Retention policy limit. If set, and the state of a room contains a `m.room.retention` event in its state which contains a `max_lifetime` that's beyond this bound, Synapse will cap the room's policy to these limits when running purge jobs.
      max: null
    ## @param synapse.retention.purgeJobs Server admins can define the settings of the background jobs purging the events whose lifetime has expired under the purge_jobs section.
    purgeJobs: []
  ## @param synapse.autoJoinRooms Users who register on this homeserver will automatically be joined to the rooms listed under this option. By default, any room aliases included in this list will be created as a publicly joinable room when the first user registers for the homeserver. If the room already exists, make certain it is a publicly joinable room, i.e. the join rule of the room must be set to public. As Spaces are just rooms under the hood, Space aliases may also be used.
  autoJoinRooms: []
  ## @param synapse.oidcProviders List of OpenID Connect (OIDC) / OAuth 2.0 identity providers, for registration and login.
  ## ref: https://element-hq.github.io/synapse/latest/openid.html
  oidcProviders: []
  ## @param synapse.encryptionEnabledByDefaultForRoomType Controls whether locally-created rooms should be end-to-end encrypted by default. Possible options are "all", "invite", and "off".
  encryptionEnabledByDefaultForRoomType: "off"
  ## @param synapse.userDirectory.enabled Defines whether users can search the user directory. If false then empty responses are returned to all queries.
  ## @param synapse.userDirectory.searchAllUsers Defines whether to search all users visible to your homeserver at the time the search is performed. If set to true, will return all users known to the homeserver matching the search query. If false, search results will only contain users visible in public rooms and users sharing a room with the requester.
  ## @param synapse.userDirectory.preferLocalUsers Defines whether to prefer local users in search query results. If set to `true`, local users are more likely to appear above remote users when searching the user directory.
  ## @param synapse.userDirectory.excludeRemoteUsers If set to true, the search will only return local users.
  ## @param synapse.userDirectory.showLockedUsers Defines whether to show locked users in search query results.
  userDirectory:
    enabled: true
    searchAllUsers: false
    preferLocalUsers: false
    excludeRemoteUsers: false
    showLockedUsers: false
  ## @param synapse.autoAcceptInvites.enabled Automatically accepting invites controls whether users are presented with an invite request or if they are instead automatically joined to a room when receiving an invite.
  ## @param synapse.autoAcceptInvites.onlyForDirectMessages Whether invites should be automatically accepted for all room types, or only for direct messages.
  ## @param synapse.autoAcceptInvites.onlyFromLocalUsers Whether to only automatically accept invites from users on this homeserver.
  ## @param synapse.autoAcceptInvites.workerToRunOn Which worker to run this module on. This must match the "worker_name". If not set or null, invites will be accepted on the main process.
  autoAcceptInvites:
    enabled: false
    onlyForDirectMessages: false
    onlyFromLocalUsers: false
    workerToRunOn: null
  ## @param synapse.experimentalFeatures Enable experimental features by adding entries with format `<feature name>: true`.
  experimentalFeatures: {}
  ## @section Database configuration
  ## @extra synapse.database The database setting defines the database that synapse uses to store all of its data
  ## ref: https://element-hq.github.io/synapse/latest/postgres.html
  ## E.g:
  ##  database:
  ##    name: psycopg2
  ##    txnLimit: 10000
  ##    args:
  ##      user: synapse_user
  ##      password: secretpassword
  ##      dbname: synapse
  ##      host: localhost
  ##      port: 5432
  ##      cp_min: 5
  ##      cp_max: 10
  database:
    ## @param synapse.database.name This option specifies the database engine to use: either `sqlite3` (for SQLite) or `psycopg2` (for PostgreSQL).
    name: "sqlite3"
    ## @param synapse.database.txnLimit Gives the maximum number of transactions to run per connection before reconnecting. 0 means no limit.
    txnLimit: 0
    ## @param synapse.database.allowUnsafeLocale This option is specific to Postgres. Under the default behavior, Synapse will refuse to start if the postgres db is set to a non-C locale.
    allowUnsafeLocale: false
    ## @param synapse.database.args Gives options which are passed through to the database engine, except for options starting with cp_, which are used to configure the Twisted connection pool.
    args: {}
  ## @section Password configuration
  ## @param synapse.passwordConfig.enabled Set to `false` to disable password authentication. Set to `only_for_reauth` to allow users with existing passwords to use them to reauthenticate (not log in), whilst preventing new users from setting passwords.
  ## @param synapse.passwordConfig.localdbEnabled Set to `false` to disable authentication against the local password database. This is ignored if enabled is `false`, and is only useful if you have other `password_providers`.
  ## @param synapse.passwordConfig.pepper Set the value here to a secret random string for extra security. DO NOT CHANGE THIS AFTER INITIAL SETUP!
  ## @param synapse.passwordConfig.policy.enabled Define and enforce a password policy, such as minimum lengths for passwords, etc. This is an implementation of MSC2000. Set to true to enable.
  ## @param synapse.passwordConfig.policy.minimumLength Minimum accepted length for a password.
  ## @param synapse.passwordConfig.policy.requireDigit Whether a password must contain at least one digit.
  ## @param synapse.passwordConfig.policy.requireSymbol Whether a password must contain at least one symbol. A symbol is any character that's not a number or a letter.
  ## @param synapse.passwordConfig.policy.requireLowercase Whether a password must contain at least one lowercase letter.
  ## @param synapse.passwordConfig.policy.requireUppercase Whether a password must contain at least one uppercase letter.
  passwordConfig:
    enabled: true
    localdbEnabled: true
    pepper: null
    policy:
      enabled: false
      minimumLength: 0
      requireDigit: false
      requireSymbol: false
      requireLowercase: false
      requireUppercase: false
  ## @section Redis configuration
  ## @param synapse.redis.enabled Configuration for Redis when using workers. This must be enabled when using workers.
  ## @param synapse.redis.host Optional host to use to connect to Redis.
  ## @param synapse.redis.port Optional port to use to connect to Redis.
  ## @param synapse.redis.password Optional password if configured on the Redis instance.
  ## @param synapse.redis.passwordPath Alternative to password, reading the password from an external file. The file should be a plain text file, containing only the password. Synapse reads the password from the given file once at startup.
  ## @param synapse.redis.dbid Optional redis dbid if needs to connect to specific redis logical db.
  ## @param synapse.redis.useTls Whether to use a TLS connection.
  ## @param synapse.redis.certificateFile Optional path to the certificate file.
  ## @param synapse.redis.privateKeyFile Optional path to the private key file.
  ## @param synapse.redis.caFile Optional path to the CA certificate file.
  ## @param synapse.redis.caPath Optional path to the folder containing the CA certificate file.
  redis:
    enabled: false
    host: "localhost"
    port: 6379
    password: null
    passwordPath: null
    dbid: null
    useTls: false
    certificateFile: null
    privateKeyFile: null
    caFile: null
    caPath: null
  ## @section E-mail configuration
  email:
    ## @param synapse.email.smtp.host The hostname of the outgoing SMTP server to use.
    ## @param synapse.email.smtp.port The port on the mail server for outgoing SMTP. If null or unset, 465 is used if force_tls is true, else 25.
    ## @param synapse.email.smtp.user Username for authentication to the SMTP server.
    ## @param synapse.email.smtp.pass Password for authentication to the SMTP server.
    ## @param synapse.email.smtp.tls.enabled By default, if the server supports TLS, it will be used, and the server must present a certificate that is valid for tlsname. If this option is set to false, TLS will not be used.
    ## @param synapse.email.smtp.tls.name The domain name the SMTP server's TLS certificate must be valid for, defaulting to `synapse.email.smtp.host`.
    ## @param synapse.email.smtp.tls.force By default, Synapse connects over plain text and then optionally upgrades to TLS via STARTTLS. If this option is set to true, TLS is used from the start (Implicit TLS), and the option `synapse.email.smtp.requireTransportSecurity` is ignored. It is recommended to enable this if supported by your mail server.
    ## @param synapse.email.smtp.tls.requireTransportSecurity Set to true to require TLS transport security for SMTP. By default, Synapse will connect over plain text, and will then switch to TLS via STARTTLS if the SMTP server supports it. If this option is set, Synapse will refuse to connect unless the server supports STARTTLS.
    smtp:
      host: "localhost"
      port: null
      user: null
      pass: null
      tls:
        enabled: true
        name: ""
        force: false
        requireTransportSecurity: false
    ## @param synapse.email.notifs.enabled
    ## @param synapse.email.notifs.from Defines the "From" address to use when sending emails. It must be set if email sending is enabled. The placeholder `%(app)s` will be replaced by the application name, which is normally set in `appName`, but may be overridden by the Matrix client application. Note that the placeholder must be written `%(app)s`, including the trailing 's'.
    ## @param synapse.email.notifs.appName Defines the default value for `%(app)s` in `notifs.from` and email subjects.
    ## @param synapse.email.notifs.forNewUsers Set to `false` to disable automatic subscription to email notifications for new users.
    ## @param synapse.email.notifs.delayBeforeMail The time to wait before emailing about a notification. This gives the user a chance to view the message via push or an open client.
    notifs:
      enabled: false
      from: null
      appName: "Matrix"
      forNewUsers: true
      delayBeforeMail: "10m"
    ## @param synapse.email.clientBaseUrl Custom URL for client links within the email notifications.
    clientBaseUrl: "https://matrix.to"
    ## @param synapse.email.validationTokenLifetime Configures the time that a validation email will expire after sending.
    validationTokenLifetime: "1h"
    ## @param synapse.email.inviteClientLocation The web client location to direct users to during an invite. This is passed to the identity server as the `org.matrix.web_client_location` key. If null or unset no guidance is given to the identity server.
    inviteClientLocation: null
    subjects:
      ## @param synapse.email.subjects.message_from_person_in_room Subject to use to notify about one message from one or more user(s) in a room which has a name.
      ## @param synapse.email.subjects.message_from_person Subject to use to notify about one message from one or more user(s) in a room which doesn't have a name.
      ## @param synapse.email.subjects.messages_from_person Subject to use to notify about multiple messages from one or more users in a room which doesn't have a name.
      ## @param synapse.email.subjects.messages_in_room Subject to use to notify about multiple messages in a room which has a name.
      ## @param synapse.email.subjects.messages_in_room_and_others Subject to use to notify about multiple messages in multiple rooms.
      ## @param synapse.email.subjects.messages_from_person_and_others Subject to use to notify about multiple messages from multiple persons in multiple rooms. This is similar to the setting above except it's used when the room in which the notification was triggered has no name.
      ## @param synapse.email.subjects.invite_from_person_to_room Subject to use to notify about an invite to a room which has a name.
      ## @param synapse.email.subjects.invite_from_person Subject to use to notify about an invite to a room which doesn't have a name.
      ## @param synapse.email.subjects.password_reset Subject to use when sending a password reset email.
      ## @param synapse.email.subjects.email_validation Subject to use when sending a verification email to assert an address's ownership.
      message_from_person_in_room: "[%(app)s] You have a message on %(app)s from %(person)s in the %(room)s room..."
      message_from_person: "[%(app)s] You have a message on %(app)s from %(person)s..."
      messages_from_person: "[%(app)s] You have messages on %(app)s from %(person)s..."
      messages_in_room: "[%(app)s] You have messages on %(app)s in the %(room)s room..."
      messages_in_room_and_others: "[%(app)s] You have messages on %(app)s in the %(room)s room and others..."
      messages_from_person_and_others: "[%(app)s] You have messages on %(app)s from %(person)s and others..."
      invite_from_person_to_room: "[%(app)s] %(person)s has invited you to join the %(room)s room on %(app)s..."
      invite_from_person: "[%(app)s] %(person)s has invited you to chat on %(app)s..."
      password_reset: "[%(server_name)s] Password reset"
      email_validation: "[%(server_name)s] Validate your email"

rbac:
  ## @param rbac.create Specifies whether RBAC resources should be created
  ##
  create: true
  ## @param rbac.rules Custom RBAC rules to set
  ## e.g:
  ## rules:
  ##   - apiGroups:
  ##       - ""
  ##     resources:
  ##       - pods
  ##     verbs:
  ##       - get
  ##       - list
  ##
  rules: []


job:
  InitContainers:
    image:
      registry: docker.io
      repository: bitnamilegacy/kubectl
      tag: 1.33.3
      digest: ""
      pullPolicy: Always
  backoffLimit: 20
  ttlSecondsAfterFinished: 3600
  podAnnotations: {}
  resources:
    requests:
      memory: 256Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 200m
