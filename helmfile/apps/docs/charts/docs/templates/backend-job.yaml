{{- /*

SPDX-License-Identifier: APACHE-2.0
*/}}
{{- range $job, $config := $.Values.backend.jobs.jobs }}
{{- if $config.command }}
---
apiVersion: {{ include "common.capabilities.job.apiVersion" $ }}
kind: Job
metadata:
  name: {{ template "docs.backend.fullname" $ }}-{{ $config.name | lower | default "random" | replace "_" "-" }}
  namespace: {{ include "common.names.namespace" $ | quote }}
  labels: {{- include "common.labels.standard" ( dict "customLabels" $.Values.commonLabels "context" $ ) | nindent 4 }}
    app.kubernetes.io/component: backend-{{ $config.name | lower | default "random" | replace "_" "-" }}
  annotations:
    {{- if or $config.annotations $.Values.commonAnnotations }}
    {{- $annotations := include "common.tplvalues.merge" (dict "values" (list $config.annotations $.Values.commonAnnotations) "context" .) }}
    {{- include "common.tplvalues.render" ( dict "value" $annotations "context" $ ) | nindent 4 }}
    {{- end }}
spec:
  ttlSecondsAfterFinished: {{ $.Values.backend.jobs.ttlSecondsAfterFinished }}
  backoffLimit: {{ $.Values.backend.jobs.backoffLimit }}
  template:
    metadata:
      {{- if $.Values.backend.podAnnotations }}
      annotations: {{- include "common.tplvalues.render" (dict "value" $.Values.backend.podAnnotations "context" $) | nindent 8 }}
      {{- end }}
      {{- $podLabels := include "common.tplvalues.merge" (dict "values" (list $.Values.backend.podLabels $.Values.commonLabels) "context" .) }}
      labels: {{- include "common.labels.standard" ( dict "customLabels" $podLabels "context" $ ) | nindent 8 }}
        app.kubernetes.io/component: backend
    spec:
      {{- include "docs.imagePullSecrets" $ | nindent 6 }}
      serviceAccountName: {{ template "docs.serviceAccountName" $ }}
      automountServiceAccountToken: {{ $.Values.backend.automountServiceAccountToken }}
      {{- if $.Values.backend.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" $.Values.backend.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if $.Values.backend.affinity }}
      affinity: {{- include "common.tplvalues.render" ( dict "value" $.Values.backend.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" $.Values.backend.podAffinityPreset "component" "docs" "customLabels" $podLabels "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" $.Values.backend.podAntiAffinityPreset "component" "docs" "customLabels" $podLabels "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" $.Values.backend.nodeAffinityPreset.type "key" $.Values.backend.nodeAffinityPreset.key "values" $.Values.backend.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if $.Values.backend.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" ( dict "value" $.Values.backend.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if $.Values.backend.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" $.Values.backend.tolerations "context" .) | nindent 8 }}
      {{- end }}
      {{- if $.Values.backend.priorityClassName }}
      priorityClassName: {{ $.Values.backend.priorityClassName | quote }}
      {{- end }}
      {{- if $.Values.backend.schedulerName }}
      schedulerName: {{ $.Values.backend.schedulerName | quote }}
      {{- end }}
      {{- if $.Values.backend.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" $.Values.backend.topologySpreadConstraints "context" .) | nindent 8 }}
      {{- end }}
      restartPolicy: {{ $config.restartPolicy | default "OnFailure" }}
      containers:
        - name: {{ template "docs.backend.fullname" $ }}
          image: {{ template "docs.backend.image" $ }}
          imagePullPolicy: {{ $.Values.backend.image.pullPolicy }}
          {{- if $.Values.backend.containerSecurityContext.enabled }}
          securityContext: {{- include "common.compatibility.renderSecurityContext" (dict "secContext" $.Values.backend.containerSecurityContext "context" $) | nindent 12 }}
          {{- end }}
          {{- if $config.command }}
          command: {{- include "common.tplvalues.render" (dict "value" $config.command "context" $) | nindent 12 }}
          {{- end }}
          {{- if $.Values.backend.args }}
          args: {{- include "common.tplvalues.render" (dict "value" $.Values.backend.args "context" $) | nindent 12 }}
          {{- end }}
          envFrom:
            - configMapRef:
                name: {{ template "docs.backend.fullname" $ }}-env
            {{- if $.Values.backend.extraEnvVarsCM }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" (dict "value" $.Values.backend.extraEnvVarsCM "context" $) }}
            {{- end }}
            {{- if $.Values.backend.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" (dict "value" $.Values.backend.extraEnvVarsSecret "context" $) }}
            {{- end }}
          {{- if $.Values.backend.resources }}
          resources: {{- toYaml $.Values.backend.resources | nindent 12 }}
          {{- else if ne $.Values.backend.resourcesPreset "none" }}
          resources: {{- include "common.resources.preset" (dict "type" $.Values.backend.resourcesPreset) | nindent 12 }}
          {{- end }}
          volumeMounts:
            - name: empty-dir
              mountPath: /tmp
              subPath: tmp-dir
            {{- if $.Values.backend.configuration.themeCustomization.enabled }}
            - name: theme-customization
              mountPath: {{ $.Values.backend.configuration.themeCustomization.mountPath }}
              readOnly: true
            {{- end }}
            {{- if $.Values.backend.extraVolumeMounts }}
            {{- include "common.tplvalues.render" (dict "value" $.Values.backend.extraVolumeMounts "context" $) | nindent 12 }}
            {{- end }}
        {{- if $.Values.backend.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" $.Values.backend.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: empty-dir
          emptyDir: {}
        {{- if $.Values.backend.configuration.themeCustomization.enabled }}
        - name: theme-customization
          configMap:
            name: {{ include "docs.theme.fullname" $ }}
        {{- end }}
        {{- if $.Values.backend.extraVolumes }}
        {{- include "common.tplvalues.render" (dict "value" $.Values.backend.extraVolumes "context" $) | nindent 8 }}
        {{- end }}
{{- end }}
{{- end }}
