# OpenProject Configuration
# Production-ready configuration with demo optimizations

global:
  security:
    allowInsecureImages: {{ .Values.openproject.security.allowInsecureImages | default false }}

  imagePullSecrets:
    - name: {{ (coalesce .Values.container.openproject.imagePullSecret .Values.container.default.imagePullSecret) | quote }}

image:
  registry: {{ (coalesce .Values.container.openproject.registry .Values.container.default.registry) | quote }}
  repository: {{ .Values.container.openproject.repository | quote }}
  tag: {{ .Values.container.openproject.tag | quote }}

openproject:
  https: {{ .Values.openproject.ingress.tls | default false }}
  admin_user:
    password: {{ .Values.openproject.admin_user.password | quote }}
    password_reset: {{ .Values.openproject.admin_user.password_reset | default true }}
    name: {{ .Values.openproject.admin_user.name | quote }}
    mail: {{ .Values.openproject.admin_user.mail | quote }}
  seed_locale: {{ .Values.openproject.seed_locale | default "en" }}
  useTmpVolumes: {{ .Values.openproject.useTmpVolumes | default false }}

ingress:
  enabled: true
  host: {{ .Values.global.hostname.openproject }}.{{ .Values.global.domain }}
  ingressClassName: {{ .Values.cluster.ingress.className | quote }}
  tls:
    enabled: {{ .Values.openproject.ingress.tls | default false }}
  annotations:
    {{- if .Values.cluster.ingress.annotations }}
    {{ .Values.cluster.ingress.annotations | toYaml | nindent 4 }}
    {{- end }}
    {{- if eq .Values.cluster.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "{{ .Values.openproject.ingress.tls | default false }}"
    {{- end }}

# Database configuration
database:
  host: {{ .Values.database.openproject.host }}
  port: {{ .Values.database.openproject.port }}
  database: {{ .Values.database.openproject.name }}
  username: {{ .Values.database.openproject.user }}
  password: {{ .Values.database.openproject.password }}

# PostgreSQL configuration
postgresql:
  bundled: {{ eq .Environment.Name "demo" }}
  image:
    registry: "registry-1.docker.io"
    repository: "bitnamilegacy/postgresql"
    tag: "17-debian-12"
  auth:
    postgresPassword: {{ .Values.secret.openproject.postgresPassword | quote }}
    username: "openproject"
    password: {{ .Values.secret.openproject.postgresPassword | quote }}
    database: "openproject"
  connection:
    host: {{ .Values.database.openproject.host }}
    port: {{ .Values.database.openproject.port }}
    database: {{ .Values.database.openproject.name }}
    username: {{ .Values.database.openproject.user }}
    password: {{ .Values.database.openproject.password }}

# Cache configuration (using Redis)
cache:
  host: {{ .Values.cache.openproject.host }}
  port: {{ .Values.cache.openproject.port }}
  password: {{ .Values.cache.openproject.password }}

redis:
  image:
    registry: {{ (coalesce .Values.container.redis.registry .Values.container.default.registry) | quote }}
    repository: {{ .Values.container.redis.repository | quote }}
    tag: {{ .Values.container.redis.tag | quote }}

# Use bundled memcached with working image
memcached:
  bundled: true
  image:
    repository: bitnami/memcached
    tag: "latest"

# OIDC configuration
oidc:
  enabled: {{ .Values.authentication.oidc | default false }}
  provider:
    name: "Keycloak"
    host: {{ .Values.global.hostname.keycloak }}.{{ .Values.global.domain }}
    identifier: {{ .Values.authentication.client.openproject.client_id }}
    secret: {{ .Values.authentication.client.openproject.client_secret }}
    authorization_endpoint: "{{ .Values.authentication.oidc.authorization_endpoint }}"
    token_endpoint: "{{ .Values.authentication.oidc.token_endpoint }}"
    userinfo_endpoint: "{{ .Values.authentication.oidc.userinfo_endpoint }}"
    jwks_uri: "{{ .Values.authentication.oidc.issuer }}/protocol/openid-connect/certs"
    scope: ["openid", "profile", "email"]

# SMTP configuration
smtp:
  enabled: {{ and (ne .Environment.Name "demo") (.Values.smtp.enabled | default false) }}
  host: {{ .Values.smtp.host | quote }}
  port: {{ .Values.smtp.port }}
  protocol: {{ .Values.smtp.protocol | quote }}
  from_address: {{ .Values.smtp.fromAddress | quote }}
  tls:
    enabled: {{ .Values.smtp.tls.enabled }}
    force: {{ .Values.smtp.tls.force }}
    require_transport_security: {{ .Values.smtp.tls.requireTransportSecurity }}
  username: {{ .Values.smtp.username | quote }}
  password: {{ .Values.smtp.password | quote }}

# Resource configuration
resources:
  limits:
    cpu: "4"
    memory: "4Gi"
  requests:
    cpu: "1"
    memory: "2Gi"

# Init container resources
appInit:
  resources:
    limits:
      memory: "2Gi"
    requests:
      memory: "1Gi"

dbInit:
  resources:
    limits:
      memory: "1Gi"
    requests:
      memory: "512Mi"

# Persistence configuration
persistence:
  # main data volume (used by OpenProject for assets/uploads, etc.)
  enabled: {{ .Values.openproject.persistence.enabled | default true }}
  size: {{ .Values.openproject.persistence.size | default "8Gi" | quote }}
  accessModes:
    {{- if .Values.openproject.persistence.accessModes }}
    {{- range .Values.openproject.persistence.accessModes }}
    - {{ . | quote }}
    {{- end }}
    {{- else }}
    - "ReadWriteOnce"
    {{- end }}
  {{- if .Values.openproject.persistence.storageClass }}
  storageClass: {{ .Values.openproject.persistence.storageClass | quote }}
  {{- end }}

  # control the optional separate assets PVC from the upstream chart
  assets:
    enabled: {{ ne .Environment.Name "demo" }}

# Security context configuration (optional)
{{- if and .Values.openproject (hasKey .Values.openproject "securityContext") }}
securityContext: {{ .Values.openproject.securityContext | toYaml | nindent 2 }}
{{- end }}

{{- if and .Values.openproject (hasKey .Values.openproject "containerSecurityContext") }}
containerSecurityContext: {{ .Values.openproject.containerSecurityContext | toYaml | nindent 2 }}
{{- end }}

# Autoscaling configuration
{{- if .Values.autoscaling.horizontal.openproject }}
autoscaling:
  hpa: {{ .Values.autoscaling.horizontal.openproject | toYaml | nindent 4 }}
{{- end }}

