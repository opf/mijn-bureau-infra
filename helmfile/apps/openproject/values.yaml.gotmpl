# OpenProject Configuration based on official opf/helm-charts
# Reference: https://github.com/opf/helm-charts

# Use the official OpenProject image (slim variant as recommended)
image:
  registry: {{ (coalesce .Values.container.openproject.registry .Values.container.default.registry) | quote }}
  repository: {{ .Values.container.openproject.repository | quote }}
  tag: {{ .Values.container.openproject.tag | quote }}

# OpenProject specific configuration
openproject:
  # HTTPS configuration - set to false for demo environment
  https: false

  # Admin user configuration
  admin_user:
    password: "admin"
    password_reset: false
    name: "Admin User"
    mail: "admin@example.com"
  # Seed locale
  seed_locale: "en"

# Ingress configuration
ingress:
  enabled: true
  host: {{ .Values.global.hostname.openproject }}.{{ .Values.global.domain }}
  ingressClassName: {{ .Values.cluster.ingress.className | quote }}
  tls:
    enabled: false  # Disabled for demo environment
  annotations:
    {{- if .Values.cluster.ingress.annotations }}
    {{ .Values.cluster.ingress.annotations | toYaml | nindent 4 }}
    {{- end }}

# PostgreSQL configuration (external)
postgresql:
  bundled: false
  connection:
    host: {{ .Values.database.openproject.host }}
    port: {{ .Values.database.openproject.port }}
  auth:
    postgresPassword: {{ .Values.database.openproject.adminpassword | quote }}
    username: {{ .Values.database.openproject.user | quote }}
    password: {{ .Values.database.openproject.password | quote }}
    database: {{ .Values.database.openproject.name | quote }}

# Cache configuration (Redis)
cache:
  host: {{ .Values.cache.openproject.host }}
  port: {{ .Values.cache.openproject.port }}
  password: {{ .Values.cache.openproject.password }}

redis:
  enabled: false

# OIDC configuration
oidc:
  enabled: true
  provider:
    name: "Keycloak"
    host: {{ .Values.global.hostname.keycloak }}.{{ .Values.global.domain }}
    identifier: {{ .Values.authentication.client.openproject.client_id }}
    secret: {{ .Values.authentication.client.openproject.client_secret }}
    authorization_endpoint: "{{ .Values.authentication.oidc.authorization_endpoint }}"
    token_endpoint: "{{ .Values.authentication.oidc.token_endpoint }}"
    userinfo_endpoint: "{{ .Values.authentication.oidc.userinfo_endpoint }}"
    jwks_uri: "{{ .Values.authentication.oidc.issuer }}/protocol/openid-connect/certs"
    scope: ["openid", "profile", "email"]

# SMTP configuration
smtp:
  enabled: {{ .Values.smtp.enabled }}
  host: {{ .Values.smtp.host | quote }}
  port: {{ .Values.smtp.port }}
  protocol: {{ .Values.smtp.protocol | quote }}
  from_address: {{ .Values.smtp.fromAddress | quote }}
  tls:
    enabled: {{ .Values.smtp.tls.enabled }}
    force: {{ .Values.smtp.tls.force }}
    require_transport_security: {{ .Values.smtp.tls.requireTransportSecurity }}
  username: {{ .Values.smtp.username | quote }}
  password: {{ .Values.smtp.password | quote }}

# Resources
resources:
  limits:
    cpu: "2"
    memory: 2Gi
  requests:
    cpu: 250m
    memory: 512Mi

# Persistence configuration - Disable file storage for demo environment
persistence:
  assets:
    enabled: false  # Disable file storage for demo environment

# Global configuration
global:
  security:
    allowInsecureImages: true
  defaultStorageClass: {{ coalesce .Values.pvc.openproject.openproject.storageClass .Values.pvc.default.storageClass | quote }}
  storageClass: {{ coalesce .Values.pvc.openproject.openproject.storageClass .Values.pvc.default.storageClass | quote }}
  imagePullSecrets:
    - name: {{ (coalesce .Values.container.openproject.imagePullSecret .Values.container.default.imagePullSecret) | quote }}

# Security context configuration to fix temporary directory permissions
# Based on solution from opnc-helm-chart repository
securityContext:
  runAsUser: 1000
  fsGroup: 1000
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false  # Allow writing to /tmp and /app/tmp

# Container security context for seeder jobs
containerSecurityContext:
  runAsUser: 1000
  runAsGroup: 1000
  runAsNonRoot: true
  allowPrivilegeEscalation: false
  capabilities:
    drop:
    - ALL
  readOnlyRootFilesystem: false  # Allow writing to temporary directories

# Autoscaling
autoscaling:
  hpa: {{ .Values.autoscaling.horizontal.openproject | toYaml | nindent 4 }}
