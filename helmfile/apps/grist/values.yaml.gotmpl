global:
  defaultStorageClass: {{ .Values.pvc.default.storageClass | quote }}

  security:
    allowInsecureImages: true

  imagePullSecrets:
    - name: {{ (coalesce .Values.container.grist.imagePullSecret .Values.container.default.imagePullSecret) | quote }}

image:
  registry: {{(coalesce .Values.container.grist.registry .Values.container.default.registry) | quote }}
  repository: {{ .Values.container.grist.repository | quote }}
  tag: {{ .Values.container.grist.tag | quote }}

auth:
  enabled: true
  oidcIdpIssuer: {{ .Values.authentication.oidc.issuer | quote }}
  oidcIdpClientId: {{ .Values.authentication.client.grist.client_id | quote }}
  oidcIdpClientSecret: {{ .Values.authentication.client.grist.client_secret | quote }}
  oidcSpHost: "https://{{ .Values.global.hostname.grist }}.{{ .Values.global.domain }}"
  oidcSpProfileNameAttr: {{ .Values.authentication.oidc.claims.display_name }}
  oidcSpProfileEmailAttr: {{ .Values.authentication.oidc.claims.email }}

autoscaling:
  hpa: {{ .Values.autoscaling.horizontal.grist | toYaml | nindent 4 }}

ai:
  enabled: true
{{- if .Values.ai.llm.endpoint }}
  endpoint: "{{ .Values.ai.llm.endpoint}}/chat/completions"
{{- end }}
{{- if .Values.ai.llm.model }}
  model: {{ .Values.ai.llm.model | quote }}
{{- end }}
{{- if .Values.ai.llm.apiKey }}
  apiKey: {{ .Values.ai.llm.apiKey | quote }}
{{- end }}

ingress:
  enabled: true
  hostname: {{ .Values.global.hostname.grist }}.{{ .Values.global.domain }}
  tls: {{ .Values.global.tls.enabled | default true }}
  selfSigned: {{ and .Values.global.tls.enabled .Values.global.tls.selfSigned | default false }}
  extraTls: {{ .Values.tls.grist | toYaml | nindent 4 }}
  ingressClassName: {{ .Values.cluster.ingress.className | quote }}
  annotations:
    {{- if .Values.cluster.ingress.annotations }}
    {{ .Values.cluster.ingress.annotations | toYaml | nindent 4 }}
    {{- end }}
    {{- if eq .Values.cluster.ingress.type "nginx" }}
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    nginx.ingress.kubernetes.io/configuration-snippet: |
      add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    {{- end }}
    {{- if eq .Values.cluster.ingress.type "haproxy-openshift" }}
    haproxy.router.openshift.io/hsts_header: max-age=31536000;includeSubDomains;preload
    {{- end }}

resourcesPreset: {{ .Values.global.resourcesPreset | quote }}

resources: {{ .Values.resource.grist.grist | default dict | toYaml | nindent 2 }}

networkPolicy:
  enabled: true
  # Restrict external access - only allow specific ingress sources
  allowExternal: false
  # Restrict external egress - only allow specific destinations
  allowExternalEgress: true


  extraIngress:
   # Allow traffic from ingress controller namespace
   - ports:
       - port: 8484
         protocol: TCP

  # Specific egress rules for required services only
  extraEgress:
    # Openid connect connectivity
    # PostgreSQL connectivity
    - ports:
      - port: 5432
        protocol: TCP
      {{- if .Values.database.grist.isInternal }}
      to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: postgresql
              app.kubernetes.io/component: primary
      {{- end }}
    # Redis connectivity
    - ports:
        - port: 6379
          protocol: TCP
      {{- if .Values.cache.grist.isInternal }}
      to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: redis
              app.kubernetes.io/component: master
      {{- end }}
    # MinIO connectivity
    - ports:
        - port: 9000
          protocol: TCP
      {{- if .Values.objectstore.grist.isInternal }}
      to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: minio
      {{- end }}
    # Ollama connectivity for AI features
    - ports:
        - port: 11434
          protocol: TCP
      {{- if .Values.application.ollama.enabled }}
      to:
        - podSelector:
            matchLabels:
              app.kubernetes.io/name: ollama
      {{- end }}


podSecurityContext: {{ .Values.security.default.podSecurityContext | toYaml | nindent 2 }}

containerSecurityContext: {{ .Values.security.default.containerSecurityContext | toYaml | nindent 2 }}

defaultLocale: {{ .Values.global.defaultLocale | quote }}

{{- if .Values.cluster.runtimeClassName }}
runtimeClassName: {{ .Values.cluster.runtimeClassName | quote }}
{{- end }}

sandboxFlavor: {{ .Values.application.grist.sandboxFlavor | default "gvisor" | quote }}

adminEmail: {{ .Values.secret.grist.adminEmail | quote }}

sessionSecret: {{ .Values.application.grist.sessionSecret  | quote }}

licensekey: {{ .Values.license.grist.key | quote }}

externalRedis:
  host: {{ .Values.cache.grist.host | quote }}
  port: {{ .Values.cache.grist.port | quote }}
  password: {{ .Values.cache.grist.password | quote }}

externalMinio:
  endpoint: {{ .Values.objectstore.grist.endpoint | quote }}
  port: {{ .Values.objectstore.grist.port | quote }}
  accessKey: {{ .Values.objectstore.grist.username | quote }}
  secretKey: {{ .Values.objectstore.grist.rootPassword | quote }}
  bucket: {{ .Values.objectstore.grist.bucket | quote }}
  useSSL: {{ .Values.objectstore.grist.useSSL | quote }}

externalDatabase:
  database: {{ .Values.database.grist.name | quote }}
  username: {{ .Values.database.grist.user | quote }}
  host: {{ .Values.database.grist.host | quote }}
  password: {{ .Values.database.grist.password | quote }}
  port: {{ .Values.database.grist.port | quote }}
  type: {{ if eq .Values.database.grist.type "postgresql" }}"postgres"{{ else }}{{ .Values.database.grist.type | quote }}{{ end }}
  logging: true

persistence:
  enabled: false
  storageClass: {{ coalesce .Values.pvc.grist.grist.storageClass .Values.pvc.default.storageClass | quote }}
  accessModes: {{ coalesce .Values.pvc.grist.grist.accessModes .Values.pvc.default.accessModes (list "ReadWriteOnce") | toYaml | nindent 4 }}
  size: {{ coalesce .Values.pvc.grist.grist.size .Values.pvc.default.size "8Gi" }}
